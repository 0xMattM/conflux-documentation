"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[551],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=l(n),p=r,f=h["".concat(c,".").concat(p)]||h[p]||m[p]||i;return n?o.createElement(f,s(s({ref:t},u),{},{components:n})):o.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[h]="string"==typeof e?e:r,s[1]=a;for(var l=2;l<i;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2991:(e,t,n)=>{n.d(t,{Z:()=>w});var o=n(7294),r=n(6010),i=n(2802),s=n(9960),a=n(3919),c=n(5999);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function u(e){let{href:t,children:n}=e;return o.createElement(s.Z,{href:t,className:(0,r.Z)("card padding--lg",l.cardContainer)},n)}function h(e){let{href:t,icon:n,title:i,description:s}=e;return o.createElement(u,{href:t},o.createElement("h2",{className:(0,r.Z)("text--truncate",l.cardTitle),title:i},n," ",i),s&&o.createElement("p",{className:(0,r.Z)("text--truncate",l.cardDescription),title:s},s))}function m(e){let{item:t}=e;const n=(0,i.Wl)(t);return n?o.createElement(h,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function p(e){let{item:t}=e;const n=(0,a.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,i.xz)(t.docId??void 0);return o.createElement(h,{href:t.href,icon:n,title:t.label,description:r?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return o.createElement(p,{item:t});case"category":return o.createElement(m,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function d(e){let{className:t}=e;const n=(0,i.jA)();return o.createElement(w,{items:n.items,className:t})}function w(e){const{items:t,className:n}=e;if(!t)return o.createElement(d,e);const s=(0,i.MN)(t);return o.createElement("section",{className:(0,r.Z)("row",n)},s.map(((e,t)=>o.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},o.createElement(f,{item:e})))))}},8289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var o=n(7462),r=(n(7294),n(3905)),i=n(2991);const s={sidebar_position:1,title:"Proof of Work"},a=void 0,c={unversionedId:"general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work",id:"general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work",title:"Proof of Work",description:"Concept of PoW",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work.mdx",sourceDirName:"general/conflux-basics/consensus-mechanisms/proof-of-work",slug:"/general/conflux-basics/consensus-mechanisms/proof-of-work/",permalink:"/zh-Hans/docs/general/conflux-basics/consensus-mechanisms/proof-of-work/",draft:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Proof of Work"},sidebar:"tutorialSidebar",previous:{title:"Consensus",permalink:"/zh-Hans/docs/general/conflux-basics/consensus-mechanisms/"},next:{title:"The Tree-Graph",permalink:"/zh-Hans/docs/general/conflux-basics/consensus-mechanisms/proof-of-work/tree-graph"}},l={},u=[{value:"Concept of PoW",id:"concept-of-pow",level:2},{value:"Bitcoin&#39;s PoW Consensus",id:"bitcoins-pow-consensus",level:2},{value:"Conflux&#39;s PoW Consensus",id:"confluxs-pow-consensus",level:2}],h={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"concept-of-pow"},"Concept of PoW"),(0,r.kt)("p",null,"The concept of Proof of Work (PoW)  was first introduced by Cynthia Dwork and Moni Naor in 1993 as a means to prevent spam emails. The concept was simple: require the sender of an email to solve a computational problem before sending the email. The idea behind this was to make it more difficult and resource-intensive for spammers to send mass emails, while still allowing legitimate email senders to send their messages without any inconvenience. "),(0,r.kt)("p",null,"The computational problem that the sender is required to solve is similar to the ones used in PoW for blockchain technology. The problem is designed to be complex and time-consuming, requiring a significant amount of computational power to solve. The sender would need to solve the problem before being allowed to send the email."),(0,r.kt)("p",null,"The receiver of the email would then verify that the sender had solved the computational problem before accepting the email. This verification process would ensure that only legitimate emails are accepted and that spammers are unable to flood the receiver's inbox with unsolicited emails."),(0,r.kt)("p",null,'While the concept of PoW for email spam prevention was sound, it was not widely adopted due to the inconvenience it posed to legitimate email senders. However, the concept of PoW was later adapted by Satoshi Nakamoto to create the peer-to-peer electronic cash system, or the blockchain "bitcoin".'),(0,r.kt)("h2",{id:"bitcoins-pow-consensus"},"Bitcoin's PoW Consensus"),(0,r.kt)("p",null,"Bitcoin uses PoW mechanism to determine who can mine new blocks on the blockchain. The process of mining a block involves repeatedly hashing the block header with a nonce value to find a hash that meets the current difficulty target set by the network. Miners compete to solve this puzzle, and the first miner to solve it is rewarded with newly minted bitcoins and any transaction fees associated with the transactions in the block."),(0,r.kt)("p",null,"Besides, the ",(0,r.kt)("strong",{parentName:"p"},"Longest Chain Rule")," is is introduced to ensure that the network agrees on a single version of the blockchain. If two miners create blocks at the same time, a fork in the blockchain occurs, creating two competing versions of the blockchain. To determine which of the two forks is the valid one, the Longest Chain Rule is applied. This rule states that the valid fork is the one with the longest chain of blocks, i.e., the one with the most proof of work invested in it."),(0,r.kt)("p",null,"By making it difficult and resource-intensive to create new blocks, PoW ensures that the network is secure and that no single entity can control the system unless it controls over 51% of the computing power. In addition, the reward system incentivizes miners to participate in the network and maintain its integrity. The introduction of PoW has revolutionized the way we think about decentralized systems and has paved the way for the development of many other cryptocurrencies and blockchain applications."),(0,r.kt)("h2",{id:"confluxs-pow-consensus"},"Conflux's PoW Consensus"),(0,r.kt)("p",null,"Conflux also uses the PoW consensus mechanism to secure its network. Combining the ",(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/pdf/1805.03870.pdf"},"Tree-Graph")," ledger structure and the ",(0,r.kt)("a",{parentName:"p",href:"https://confluxnetwork.medium.com/conflux-research-group-ghast-mechanism-adaptive-weight-ghast-explained-part-1-ffe8224a7282"},"GHAST")," chain selection rule,  it can achieve the same level of decentralization and security as Bitcoin and Ethereum but provide more than two orders of magnitude improvement on transaction throughput (TPS) and confirmation latency. "),(0,r.kt)(i.Z,{mdxType:"DocCardList"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://confluxnetwork.org/files/Conflux_Technical_Presentation_20200309.pdf"},"Conflux Technical Presentation")," page 45-47 for the most accurate description of Conflux's throughput.")))}p.isMDXComponent=!0}}]);