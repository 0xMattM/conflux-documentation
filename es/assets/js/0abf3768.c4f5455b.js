"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[7868],{64530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=t(85893),a=t(11151);const r={sidebar_position:1,title:"React",description:"Learn how to use Web3Modal in a React project",keywords:["WalletConnect","Web3Modal","Dapp"],displayed_sidebar:"eSpaceSidebar"},i="Integrating WalletConnect with Your React App on Conflux Chain",c={id:"espace/tutorials/walletConnect/reactjs",title:"React",description:"Learn how to use Web3Modal in a React project",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/espace/tutorials/walletConnect/reactjs.md",sourceDirName:"espace/tutorials/walletConnect",slug:"/espace/tutorials/walletConnect/reactjs",permalink:"/es/docs/espace/tutorials/walletConnect/reactjs",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/es",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"React",description:"Learn how to use Web3Modal in a React project",keywords:["WalletConnect","Web3Modal","Dapp"],displayed_sidebar:"eSpaceSidebar"},sidebar:"eSpaceSidebar",previous:{title:"How to use WalletConnect",permalink:"/es/docs/category/how-to-use-walletconnect"},next:{title:"Next.js",permalink:"/es/docs/espace/tutorials/walletConnect/nextjs"}},l={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Setting Up Your React Project",id:"step-1-setting-up-your-react-project",level:2},{value:"Step 2: Installing Necessary Libraries",id:"step-2-installing-necessary-libraries",level:2},{value:"Step 3: Setting Up WalletConnect",id:"step-3-setting-up-walletconnect",level:2},{value:"Step 4:  Use the Web3ModalProvider in Your Application",id:"step-4--use-the-web3modalprovider-in-your-application",level:2},{value:"Step 5: Connect Conflux eSpace Network",id:"step-5-connect-conflux-espace-network",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"integrating-walletconnect-with-your-react-app-on-conflux-chain",children:"Integrating WalletConnect with Your React App on Conflux Chain"}),"\n",(0,o.jsx)(n.p,{children:"This tutorial will guide you how to seamlessly integrate WalletConnect into your React application to enable user interactions with Conflux eSpace, thereby providing your users with a secure and intuitive way to connect their wallets to your dApp on Conflux eSpace."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(23716).Z+"",children:(0,o.jsx)(n.img,{alt:"React Demo",src:t(5101).Z+"",width:"2302",height:"1344"})})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Node.js installed on your machine"}),"\n",(0,o.jsx)(n.li,{children:"Basic understanding of React, JavaScript and Typescript"}),"\n",(0,o.jsx)(n.li,{children:"A Conflux eSpace network-compatible wallet (e.g., MetaMask)"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"step-1-setting-up-your-react-project",children:"Step 1: Setting Up Your React Project"}),"\n",(0,o.jsx)(n.p,{children:"If you haven't already created a React project, start by setting up one. You can skip this step if you have an existing project."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npx create-react-app web3modal-conflux-react\ncd web3modal-conflux-react\n"})}),"\n",(0,o.jsx)(n.h2,{id:"step-2-installing-necessary-libraries",children:"Step 2: Installing Necessary Libraries"}),"\n",(0,o.jsx)(n.p,{children:"Web3Modal SDK has support for Wagmi, which will help you interact with wallets and smart contracts."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install @web3modal/wagmi wagmi viem @tanstack/react-query\n"})}),"\n",(0,o.jsx)(n.h2,{id:"step-3-setting-up-walletconnect",children:"Step 3: Setting Up WalletConnect"}),"\n",(0,o.jsxs)(n.p,{children:["Create a new file in your project, ",(0,o.jsx)(n.code,{children:"Web3ModalConfig.tsx"}),", and import the necessary modules to set up WalletConnect."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { createWeb3Modal } from "@web3modal/wagmi/react";\n\nimport { http, createConfig, WagmiProvider } from "wagmi";\n\n// Import Conflux eSpace network config for wagmi\nimport { confluxESpace} from "wagmi/chains";\nimport { walletConnect, injected, coinbaseWallet } from "wagmi/connectors";\n\nimport { QueryClient, QueryClientProvider } from "@tanstack/react-query";\nimport { ReactNode } from "react";\n\n// 0. Setup queryClient\nconst queryClient = new QueryClient();\n\n// 1. Get projectId at https://cloud.walletconnect.com\nconst projectId = "YOUR_PROJECT_ID";\n\n// 2. Create wagmiConfig\nconst metadata = {\n  name: "Web3Modal",\n  description: "Web3Modal Example",\n  url: "https://web3modal.com", // origin must match your domain & subdomain\n  icons: ["https://avatars.githubusercontent.com/u/37784886"],\n};\n\nconst config =  (createConfig as any)({\n  chains: [confluxESpace],\n  transports: {\n    [confluxESpace.id]: http(),\n  },\n  connectors: [\n    walletConnect({ projectId, metadata, showQrModal: false }),\n    injected({ shimDisconnect: true }),\n    coinbaseWallet({\n      appName: metadata.name,\n      appLogoUrl: metadata.icons[0],\n    }),\n  ],\n});\n\n// 3. Create modal\ncreateWeb3Modal({\n  wagmiConfig: config,\n  projectId,\n  enableAnalytics: false, // Optional - defaults to your Cloud configuration\n  enableOnramp: false, // Optional - false as default\n});\n\nexport function Web3ModalProvider({ children }: { children: ReactNode }) {\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-4--use-the-web3modalprovider-in-your-application",children:"Step 4:  Use the Web3ModalProvider in Your Application"}),"\n",(0,o.jsxs)(n.p,{children:["At your application's entry point, typically in the index.tsx, use the ",(0,o.jsx)(n.code,{children:"Web3ModalProvider"})," component to wrap your application."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import React from "react";\nimport ReactDOM from "react-dom/client";\nimport "./index.css";\nimport App from "./App";\nimport reportWebVitals from "./reportWebVitals";\nimport { Web3ModalProvider } from "./Web3ModalConfig";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById("root") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Web3ModalProvider>\n      <App />\n    </Web3ModalProvider>\n  </React.StrictMode>\n);\n\n'})}),"\n",(0,o.jsx)(n.h2,{id:"step-5-connect-conflux-espace-network",children:"Step 5: Connect Conflux eSpace Network"}),"\n",(0,o.jsx)(n.p,{children:"You can use React state hooks to manage the connected state and listen to WalletConnect provider events."}),"\n",(0,o.jsxs)(n.p,{children:["Create a new component, ",(0,o.jsx)(n.code,{children:"ConnectWalletBtn.tsx"}),", in your project, to open ConnectWallet Modal"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import { useWeb3Modal } from "@web3modal/wagmi/react";\n\nexport default function ConnectButton() {\n  // Use modal hook\n  const { open } = useWeb3Modal();\n\n  return (\n    <>\n      <button onClick={() => open()}>Open Connect Modal</button>\n    </>\n  );\n}\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"App.tsx"})," or any other component, use the ",(0,o.jsx)(n.code,{children:"ConnectButton"})," component to connect to wallets on the Conflux eSpace"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import React from "react";\nimport logo from "./logo.png";\nimport "./App.css";\nimport { useWeb3Modal } from "@web3modal/wagmi/react";\nimport ConnectButton from "./ConnectWalletBtn";\nfunction App() {\n  return (\n    <div className="App">\n      <header className="App-header">\n        <img src={logo} className="App-logo" alt="logo" />\n        <p>\n          Using WalletConnect on Conflux eSpace Dapp\n        </p>\n        <ConnectButton/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"By following the steps above, you have integrated Web3Modal into your React application. This will enable users to connect their wallets via Web3Modal and interact with Conflux eSpace using Wagmi and React Query. You can now continue developing your application, adding more functionalities."})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},23716:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/files/walletconnect-react-611a82674f99af68a75608a6a4dbaa25.png"},5101:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/walletconnect-react-611a82674f99af68a75608a6a4dbaa25.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var o=t(67294);const a={},r=o.createContext(a);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);