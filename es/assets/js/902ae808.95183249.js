"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[8908],{4137:(e,o,r)=>{r.d(o,{Zo:()=>d,kt:()=>f});var n=r(7294);function a(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function t(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?t(Object(r),!0).forEach((function(o){a(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function s(e,o){if(null==e)return{};var r,n,a=function(e,o){if(null==e)return{};var r,n,a={},t=Object.keys(e);for(n=0;n<t.length;n++)r=t[n],o.indexOf(r)>=0||(a[r]=e[r]);return a}(e,o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)r=t[n],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var o=n.useContext(i),r=o;return e&&(r="function"==typeof e?e(o):c(c({},o),e)),r},d=function(e){var o=l(e.components);return n.createElement(i.Provider,{value:o},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},m=n.forwardRef((function(e,o){var r=e.components,a=e.mdxType,t=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,f=u["".concat(i,".").concat(m)]||u[m]||p[m]||t;return r?n.createElement(f,c(c({ref:o},d),{},{components:r})):n.createElement(f,c({ref:o},d))}));function f(e,o){var r=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var t=r.length,c=new Array(t);c[0]=m;var s={};for(var i in o)hasOwnProperty.call(o,i)&&(s[i]=o[i]);s.originalType=e,s[u]="string"==typeof e?e:a,c[1]=s;for(var l=2;l<t;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7661:(e,o,r)=>{r.d(o,{Z:()=>h});var n=r(7294),a=r(6010),t=r(3734),c=r(3699),s=r(2735),i=r(7325);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d(e){let{href:o,children:r}=e;return n.createElement(c.Z,{href:o,className:(0,a.Z)("card padding--lg",l.cardContainer)},r)}function u(e){let{href:o,icon:r,title:t,description:c}=e;return n.createElement(d,{href:o},n.createElement("h2",{className:(0,a.Z)("text--truncate",l.cardTitle),title:t},r," ",t),c&&n.createElement("p",{className:(0,a.Z)("text--truncate",l.cardDescription),title:c},c))}function p(e){let{item:o}=e;const r=(0,t.Wl)(o);return r?n.createElement(u,{href:r,icon:"\ud83d\uddc3\ufe0f",title:o.label,description:o.description??(0,i.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:o.items.length})}):null}function m(e){let{item:o}=e;const r=(0,s.Z)(o.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,t.xz)(o.docId??void 0);return n.createElement(u,{href:o.href,icon:r,title:o.label,description:o.description??a?.description})}function f(e){let{item:o}=e;switch(o.type){case"link":return n.createElement(m,{item:o});case"category":return n.createElement(p,{item:o});default:throw new Error(`unknown item type ${JSON.stringify(o)}`)}}function b(e){let{className:o}=e;const r=(0,t.jA)();return n.createElement(h,{items:r.items,className:o})}function h(e){const{items:o,className:r}=e;if(!o)return n.createElement(b,e);const c=(0,t.MN)(o);return n.createElement("section",{className:(0,a.Z)("row",r)},c.map(((e,o)=>n.createElement("article",{key:o,className:"col col--6 margin-bottom--lg"},n.createElement(f,{item:e})))))}},8387:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var n=r(7462),a=(r(7294),r(4137)),t=r(7661);const c={sidebar_position:1,title:"Prueba de trabajo (Proof of Work)"},s=void 0,i={unversionedId:"general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work",id:"general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work",title:"Prueba de trabajo (Proof of Work)",description:"Concepto de PoW",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/general/conflux-basics/consensus-mechanisms/proof-of-work/proof-of-work.mdx",sourceDirName:"general/conflux-basics/consensus-mechanisms/proof-of-work",slug:"/general/conflux-basics/consensus-mechanisms/proof-of-work/",permalink:"/es/docs/general/conflux-basics/consensus-mechanisms/proof-of-work/",draft:!1,editUrl:"https://crowdin.com/project/conflux/es",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Prueba de trabajo (Proof of Work)"},sidebar:"generalSidebar",previous:{title:"Consenso",permalink:"/es/docs/general/conflux-basics/consensus-mechanisms/"},next:{title:"The Tree-Graph",permalink:"/es/docs/general/conflux-basics/consensus-mechanisms/proof-of-work/tree-graph"}},l={},d=[{value:"Concepto de PoW",id:"concepto-de-pow",level:2},{value:"Consenso PoW de Bitcoin",id:"consenso-pow-de-bitcoin",level:2},{value:"Consenso de PoW de Conflux",id:"consenso-de-pow-de-conflux",level:2}],u={toc:d},p="wrapper";function m(e){let{components:o,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"concepto-de-pow"},"Concepto de PoW"),(0,a.kt)("p",null,"El concepto de Prueba de Trabajo (PoW) fue introducido por primera vez por Cynthia Dwork y Moni Naor en 1993 como un medio para prevenir el correo no deseado (spam). El concepto era simple: requiere que el remitente de correo electr\xf3nico resuelva un problema de computaci\xf3n antes de enviarlo. El problema computacional est\xe1 dise\xf1ado para que requiera tiempo, necesitando cierta cantidad de poder computo para resolver.  El receptor del correo electr\xf3nico verificar\xeda entonces que el remitente hab\xeda resuelto el problema computacional antes de aceptar el correo electr\xf3nico. Este proceso de verificaci\xf3n asegurar\xeda que s\xf3lo se aceptar\xe1n correos electr\xf3nicos leg\xedtimos y que los spammers no pueden inundar la bandeja de entrada del receptor con correos electr\xf3nicos no solicitados."),(0,a.kt)("p",null,'La idea detr\xe1s de esto era hacer que resulte mucho m\xe1s dif\xedcil y intensivo en recursos para que los spammers env\xeden correos masivos, mientras que todav\xeda permite a los remitentes leg\xedtimos de correo electr\xf3nico enviar sus mensajes, pero con unas pocas inconveniencias. Mientras que el concepto de PoW para la prevenci\xf3n de spam por correo electr\xf3nico se escuch\xf3, no fue ampliamente adoptada debido a las molestias que plante\xf3 a los remitentes de correo electr\xf3nico leg\xedtimos. Sin embargo, el concepto de PoW fue adaptado m\xe1s tarde por Satoshi Nakamoto para crear el sistema electr\xf3nico de activos digitales peer-to-peer o la blockchain "bitcoin".'),(0,a.kt)("h2",{id:"consenso-pow-de-bitcoin"},"Consenso PoW de Bitcoin"),(0,a.kt)("p",null,"Bitcoin utiliza el mecanismo PoW para determinar qui\xe9n puede agregar nuevos bloques en la cadena de bloques. El proceso de adici\xf3n de un bloque involucra una y otra vez hacer hash en la cabecera del bloque con un valor nonce para encontrar un hash que cumpla con el objetivo de dificultad actual establecido por la red. Los mineros compiten para resolver este rompecabezas, y el primer minero en resolverlo es recompensado con bitcoins reci\xe9n creados y cualquier comisi\xf3n de transacci\xf3n asociada con las transacciones en el bloque."),(0,a.kt)("p",null,"Adem\xe1s, se introduce la ",(0,a.kt)("strong",{parentName:"p"},"regla de cadena de bloques m\xe1s larga")," para asegurar que la red acuerde una sola versi\xf3n de la cadena de bloques. Si dos mineros crean bloques al mismo tiempo, una bifurcaci\xf3n en la cadena de bloques ocurre, creando dos versiones competitivas de la cadena de bloques. Para determinar cu\xe1l de las dos bifurcaciones es la v\xe1lida, se aplica la regla de cadena m\xe1s larga. Esta regla establece que la bifurcaci\xf3n v\xe1lida es la que tiene la cadena de bloques m\xe1s larga, es decir el que tiene m\xe1s prueba de trabajo invertido en \xe9l."),(0,a.kt)("p",null,"Al hacer dif\xedcil y intensivo en recursos crear nuevos bloques, PoW asegura que la red es segura y que ninguna entidad puede controlar el sistema a menos que controle m\xe1s del 51% de la potencia de c\xf3mputo. Adem\xe1s, el sistema de recompensas incentiva a los mineros para participar y mantener la red. La introducci\xf3n de PoW ha revolucionado la manera en que pensamos en los sistemas descentralizados y ha allanado el camino para el desarrollo de muchas otras criptomonedas y aplicaciones de blockchain."),(0,a.kt)("h2",{id:"consenso-de-pow-de-conflux"},"Consenso de PoW de Conflux"),(0,a.kt)("p",null,"Conflux tambi\xe9n utiliza el mecanismo de consenso PoW para asegurar su red. Combinando la estructura de ledger ",(0,a.kt)("a",{parentName:"p",href:"https://arxiv.org/pdf/1805.03870.pdf"},"Tree-Graph")," y la ",(0,a.kt)("a",{parentName:"p",href:"https://confluxnetwork.medium.com/conflux-research-group-ghast-mechanism-adaptive-weight-ghast-explained-part-1-ffe8224a7282"},"GHAST")," regla de selecci\xf3n de cadena, puede lograr el mismo nivel de descentralizaci\xf3n y seguridad que Bitcoin y Ethereum pero proporcionar m\xe1s de dos \xf3rdenes de mejora de magnitud en la transacci\xf3n (TPS) y latencia de confirmaci\xf3n. "),(0,a.kt)(t.Z,{mdxType:"DocCardList"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://confluxnetwork.org/files/Conflux_Technical_Presentation_20200309.pdf"},"Conflux Technical Presentation")," page 45-47 for the most accurate description of Conflux's throughput.")))}m.isMDXComponent=!0}}]);