"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[9811],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),l=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(a),d=n,m=u["".concat(i,".").concat(d)]||u[d]||f[d]||o;return a?r.createElement(m,s(s({ref:t},p),{},{components:a})):r.createElement(m,s({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:n,s[1]=c;for(var l=2;l<o;l++)s[l]=a[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2726:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2,title:"Transferring Funds Across Spaces"},s="Transferring Funds Across Spaces",c={unversionedId:"core/learn/tutorial/transferring-funds-across-spaces",id:"core/learn/tutorial/transferring-funds-across-spaces",title:"Transferring Funds Across Spaces",description:"Overview",source:"@site/docs/core/learn/tutorial/transferring-funds-across-spaces.md",sourceDirName:"core/learn/tutorial",slug:"/core/learn/tutorial/transferring-funds-across-spaces",permalink:"/docs/core/learn/tutorial/transferring-funds-across-spaces",draft:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/core/learn/tutorial/transferring-funds-across-spaces.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Transferring Funds Across Spaces"},sidebar:"tutorialSidebar",previous:{title:"Using Ledger on Conflux Core Space",permalink:"/docs/core/learn/tutorial/using-ledger-on-conflux-core-space"},next:{title:"Transferring Funds Across Chains",permalink:"/docs/core/learn/tutorial/transferring-funds-across-chains"}},i={},l=[{value:"Overview",id:"overview",level:2},{value:"ConfluxHub",id:"confluxhub",level:2},{value:"Cross-Space Transfers for Developers",id:"cross-space-transfers-for-developers",level:2},{value:"Internal Contract",id:"internal-contract",level:3}],p={toc:l},u="wrapper";function f(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"transferring-funds-across-spaces"},"Transferring Funds Across Spaces"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Since the Hydra hard fork in 2022, Conflux has two spaces: Core Space and eSpace. Both spaces use CFX as their native token and they run on the same blockchain. For more details, please refer to the ",(0,n.kt)("a",{parentName:"p",href:"https://hackmd.io/@thegaram/S15_VAwh5"},"documentation")," or to ",(0,n.kt)("a",{parentName:"p",href:"https://medium.com/conflux-network/conflux-espace-a-high-level-overview-cdca29bc422a"},"this article"),"."),(0,n.kt)("p",null,"It is possible to move CFX or ERC20 tokens between Core Space and eSpace. This operation is called cross-space transfer. In the next section, we will explain how you can make such transfers."),(0,n.kt)("h2",{id:"confluxhub"},"ConfluxHub"),(0,n.kt)("p",null,"The easiest way to transfer assets between Core Space and eSpace is to use ",(0,n.kt)("a",{parentName:"p",href:"https://confluxhub.io/espace-bridge/cross-space"},"ConfluxHub"),". We recommend that you set up two wallets: ",(0,n.kt)("a",{parentName:"p",href:"https://fluentwallet.com/"},"Fluent")," for Core Space and ",(0,n.kt)("a",{parentName:"p",href:"https://metamask.io/"},"MetaMask")," for eSpace."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Locale Dropdown",src:a(7397).Z,width:"1766",height:"1422"})),(0,n.kt)("p",null,"Follow these steps to make a cross-space transfer:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Start by clicking on ",(0,n.kt)("inlineCode",{parentName:"li"},"Connect Wallet")," to connect your Fluent and MetaMask wallets to ConfluxHub."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"To: Conflux eSpace")," at the top shows that you are making a transfer from Core Space to eSpace. If you would like to make a transfer in the other direction, click on the arrow next to this text."),(0,n.kt)("li",{parentName:"ul"},"In the ",(0,n.kt)("inlineCode",{parentName:"li"},"Conflux eSpace Destination Address")," field, type in your eSpace address or click the MetaMask icon on the right to fill this field automatically."),(0,n.kt)("li",{parentName:"ul"},"Next, select the token that you want to transfer and enter the transfer amount."),(0,n.kt)("li",{parentName:"ul"},"If the button on the bottom says ",(0,n.kt)("inlineCode",{parentName:"li"},"Approve"),", click on it to submit an ERC20 token approval first."),(0,n.kt)("li",{parentName:"ul"},"Once the button on the bottom says ",(0,n.kt)("inlineCode",{parentName:"li"},"Transfer"),", click on it to make the transfer.")),(0,n.kt)("p",null,"Making a cross-space transfer from eSpace to Core Space follows a similar process but it has two main steps: First, transfer the token to the bridge on eSpace. Second, withdraw the token from the bridge on Core Space. Please follow the site\u2019s instructions."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u26a0\ufe0f When making a cross-space transfer, always double check your addresses to avoid accidental asset loss.")),(0,n.kt)("h2",{id:"cross-space-transfers-for-developers"},"Cross-Space Transfers for Developers"),(0,n.kt)("p",null,"Below we will discuss how to make cross-space transfers programmatically."),(0,n.kt)("h3",{id:"internal-contract"},"Internal Contract"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-90.md"},"CIP-90")," introduced the concept of two spaces running on one blockchain, and defined a new ",(0,n.kt)("a",{parentName:"p",href:"https://hackmd.io/@thegaram/S15_VAwh5"},"internal contract")," to connect the two. This contract is available under the address ",(0,n.kt)("a",{parentName:"p",href:"https://confluxscan.io/address/cfx:aaejuaaaaaaaaaaaaaaaaaaaaaaaaaaaa2sn102vjv"},(0,n.kt)("inlineCode",{parentName:"a"},"cfx:aaejuaaaaaaaaaaaaaaaaaaaaaaaaaaaa2sn102vjv"))," (hex: ",(0,n.kt)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000006"),") on Core Space."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"interface CrossSpace {\n    /* methods for cross-space CFX transfers */\n\n    function transferEVM(bytes20 to) external payable returns (bytes memory output);\n    \n    function withdrawFromMapped(uint256 value) external;\n\n    function mappedBalance(address addr) external view returns (uint256);\n    \n    /* methods for other cross-space operations */\n\n    function callEVM(bytes20 to, bytes calldata data) external payable returns (bytes memory output);\n\n    function staticCallEVM(bytes20 to, bytes calldata data) external view returns (bytes memory output);\n    \n    // ...\n}\n\n")))}f.isMDXComponent=!0},7397:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/transferAssets-0c1a3f76a3a0ea978d3697997283f63a.png"}}]);