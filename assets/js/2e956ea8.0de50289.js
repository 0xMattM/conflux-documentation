"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[9294],{30940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>r});var a=t(85893),i=t(11151);const c={sidebar_position:2,title:"Deploying an ERC-20 Token using Remix IDE",description:"Deploying an ERC-20 Token using Remix IDE",displayed_sidebar:"eSpaceSidebar"},s=void 0,o={id:"espace/tutorials/deployContract/remix",title:"Deploying an ERC-20 Token using Remix IDE",description:"Deploying an ERC-20 Token using Remix IDE",source:"@site/docs/espace/tutorials/deployContract/remix.md",sourceDirName:"espace/tutorials/deployContract",slug:"/espace/tutorials/deployContract/remix",permalink:"/docs/espace/tutorials/deployContract/remix",draft:!1,unlisted:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/espace/tutorials/deployContract/remix.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Deploying an ERC-20 Token using Remix IDE",description:"Deploying an ERC-20 Token using Remix IDE",displayed_sidebar:"eSpaceSidebar"},sidebar:"eSpaceSidebar",previous:{title:"Deploying contract using hardhat and foundry",permalink:"/docs/espace/tutorials/deployContract/hardhatAndFoundry"},next:{title:"Deploying contract using thirdweb",permalink:"/docs/espace/tutorials/deployContract/thirdweb"}},d={},r=[{value:"Adding an ERC-20 Token to MetaMask",id:"adding-an-erc-20-token-to-metamask",level:2},{value:"Transferring an ERC-20 Token with MetaMask",id:"transferring-an-erc-20-token-with-metamask",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["In a new tab, open the Remix IDE at ",(0,a.jsx)(n.a,{href:"https://remix.ethereum.org",children:"remix.ethereum.org"}),".\nIt might take a minute to load, but once it has, create a new file ",(0,a.jsx)(n.code,{children:"ERC20Token.sol"})," in the workspace panel on the left:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-new-file",src:t(69736).Z+"",width:"678",height:"364"})}),"\n",(0,a.jsx)(n.p,{children:"Copy and paste the following code into the central editor panel:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol";\n\ncontract MyToken is ERC20 {\n    constructor (string memory name, string memory symbol) ERC20(name, symbol) {\n        // Mint 10000 tokens to msg.sender\n        // Similar to how 1 dollar = 100 cents\n        // 1 token = 1 * (10 ** decimals)\n        _mint(msg.sender, 10000 * 10 ** uint(decimals()));\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Click the ",(0,a.jsx)(n.code,{children:"Solidity Compile"})," button on the far left panel (the second icon down);\nensure your selected Solidity compiler version is 0.8 (minor versions within 0.8, e.g., 0.8.4 work too), and click ",(0,a.jsx)(n.code,{children:"Compile ERC20Token.sol"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-solidity-compile",src:t(15973).Z+"",width:"1228",height:"548"})}),"\n",(0,a.jsxs)(n.p,{children:["Once the contract is compiled, click the ",(0,a.jsx)(n.code,{children:"Deploy & run transactions"})," button in the far left panel (the icon below the Solidity compiler).\nIn the ",(0,a.jsx)(n.code,{children:"ENVIRONMENT"})," drop-down select ",(0,a.jsx)(n.code,{children:"Injected Web3"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-inject-web3",src:t(1912).Z+"",width:"367",height:"455"})}),"\n",(0,a.jsxs)(n.p,{children:["You will see a MetaMask pop-up window asking you to give the Remix IDE permission to access it.\nClick ",(0,a.jsx)(n.code,{children:"Next"})," and then ",(0,a.jsx)(n.code,{children:"Connect"})," to grant access."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-connect-metamask",src:t(88706).Z+"",width:"735",height:"574"})}),"\n",(0,a.jsxs)(n.p,{children:["Back in the Remix interface, click the arrow next to the ",(0,a.jsx)(n.code,{children:"DEPLOY"})," section of the left panel.\nFill in the token details with whatever you like (",(0,a.jsx)(n.code,{children:"GoldenToken"})," and ",(0,a.jsx)(n.code,{children:"GLD"})," in the example), and click ",(0,a.jsx)(n.code,{children:"transact"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-deploy-contract",src:t(86362).Z+"",width:"360",height:"566"})}),"\n",(0,a.jsxs)(n.p,{children:["Another MetaMask pop-up will appear asking you to confirm the transaction.\nClick ",(0,a.jsx)(n.code,{children:"Confirm"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-deploy-contract-metamask-confirm",src:t(20898).Z+"",width:"340",height:"579"})}),"\n",(0,a.jsxs)(n.p,{children:["After a few moments the transaction will be confirmed by the network.\nYou will see a success message in the bottom panel and the contract listed under ",(0,a.jsx)(n.code,{children:"Deployed Contracts"})," on the left panel.\nClick the copy button to copy the address of the newly deployed contract."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Remix-deploy-contract-confirmed",src:t(68138).Z+"",width:"1817",height:"254"})}),"\n",(0,a.jsx)(n.p,{children:"Now that the contract is deployed on the Conflux eSpace, we can interact with it via MetaMask."}),"\n",(0,a.jsx)(n.h2,{id:"adding-an-erc-20-token-to-metamask",children:"Adding an ERC-20 Token to MetaMask"}),"\n",(0,a.jsxs)(n.p,{children:["In the MetaMask interface (with the Conflux EVM Testnet network still selected), click the ",(0,a.jsx)(n.code,{children:"Add Token"})," button:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-add-token-button",src:t(87156).Z+"",width:"1938",height:"1034"})}),"\n",(0,a.jsxs)(n.p,{children:["Paste the token address copied from Remix in the previous step.\nThe remaining token details should fill in automatically as MetaMask finds the contract on-chain.\nClick ",(0,a.jsx)(n.code,{children:"Next"}),":"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-add-token",src:t(33367).Z+"",width:"340",height:"532"})}),"\n",(0,a.jsxs)(n.p,{children:["On the next screen you see the balance (100 tokens), as minted in our contract constructor.\nClick ",(0,a.jsx)(n.code,{children:"Add Tokens"}),":"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-add-token-confirm",src:t(37880).Z+"",width:"340",height:"545"})}),"\n",(0,a.jsx)(n.p,{children:"The token has now been added to MetaMask and we can use the MetaMask interface to view the token balance and to transfer the token to others."}),"\n",(0,a.jsx)(n.h2,{id:"transferring-an-erc-20-token-with-metamask",children:"Transferring an ERC-20 Token with MetaMask"}),"\n",(0,a.jsxs)(n.p,{children:["Continuing from the previous step, click the ",(0,a.jsx)(n.code,{children:"Send"})," button in the MetaMask interface:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-my-token",src:t(93465).Z+"",width:"1938",height:"1362"})}),"\n",(0,a.jsxs)(n.p,{children:["Select a recipient (if you have multiple accounts in MetaMask you can simply select another account), and an amount of tokens to send.\nClick ",(0,a.jsx)(n.code,{children:"Next"}),":"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-send-my-token",src:t(96940).Z+"",width:"340",height:"539"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Once again the gas price should be set to zero, but this will change going forward."})}),"\n",(0,a.jsxs)(n.p,{children:["Click ",(0,a.jsx)(n.code,{children:"Confirm"})," to send the transaction to the network:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-send-my-token-confirm",src:t(91119).Z+"",width:"340",height:"544"})}),"\n",(0,a.jsx)(n.p,{children:"After a few moments the transaction will be confirmed by the network.\nYou can see the updated balance your account holds in the MetaMask interface:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-my-token-sent-account1",src:t(3284).Z+"",width:"1926",height:"1372"})}),"\n",(0,a.jsx)(n.p,{children:"If you transferred to another MetaMask account you hold then you can follow the aforementioned instructions for adding the token to MetaMask on the other account, and view its balance also."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MetaMask-add-token-account2",src:t(78238).Z+"",width:"1912",height:"784"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},87156:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/metam-import-token-b2a756a7a4ed3ac17f1a75fca77bf738-b2a756a7a4ed3ac17f1a75fca77bf738.png"},33367:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/mm-import-token-short-1-71f005c4fdb996d2a4b5651ceb6bc7bd-71f005c4fdb996d2a4b5651ceb6bc7bd.png"},37880:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/mm-import-token-short-2-675291201c0f55a6a0603edad9544335.png"},78238:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/mm-token-balance-changed-c59c6e2434009c0dcb6e03ef79ba5e60-c59c6e2434009c0dcb6e03ef79ba5e60.png"},88706:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_connect_with_metamask-9d8214740f372d3b41e489cbe23c5884-9d8214740f372d3b41e489cbe23c5884-9d8214740f372d3b41e489cbe23c5884.png"},86362:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_deploy_contract-6423d60330003a7ffc0dc28ee5cd8178-6423d60330003a7ffc0dc28ee5cd8178-6423d60330003a7ffc0dc28ee5cd8178.png"},68138:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_deploy_contract_confirmed-59390e985747c30736f46356a88b4ff1-59390e985747c30736f46356a88b4ff1-59390e985747c30736f46356a88b4ff1.png"},20898:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_deploy_contract_metamask_confirm-6b4f8c2a751ec4a4b6ad9df96584c623-6b4f8c2a751ec4a4b6ad9df96584c623-6b4f8c2a751ec4a4b6ad9df96584c623.png"},1912:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_injected_web3-dbb0d671a1703239451d7d4e133f68ba-dbb0d671a1703239451d7d4e133f68ba-dbb0d671a1703239451d7d4e133f68ba.png"},69736:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_new_file-1-15cadba3e578d16df451448175231e8b.png"},15973:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/remix_solidity_compile-1f459820c9caef73c47d3af1c87e71a6-1f459820c9caef73c47d3af1c87e71a6-1f459820c9caef73c47d3af1c87e71a6.png"},96940:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/send-gld-1-da8b6feee94ca0dfe89afc5118267c89-da8b6feee94ca0dfe89afc5118267c89.jpeg"},91119:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/send-gld-confirm-7789e263d3d53e45e2e4bebbf1d057cb-7789e263d3d53e45e2e4bebbf1d057cb.jpeg"},93465:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/start-send-gld-b56abfa83bb02864b94c3a5adcbcc0d0-b56abfa83bb02864b94c3a5adcbcc0d0.jpeg"},3284:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/token-transfer-balance-changed-24a5b4588118295da68d10d9a3cea0cf-24a5b4588118295da68d10d9a3cea0cf.jpeg"},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var a=t(67294);const i={},c=a.createContext(i);function s(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);