"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[3237],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,h=u["".concat(s,".").concat(d)]||u[d]||f[d]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},37166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:4,title:"Running a PoS Staking Pool",displayed_sidebar:"generalSidebar"},i=void 0,l={unversionedId:"general/mine-stake/stake/running-staking-pool",id:"general/mine-stake/stake/running-staking-pool",title:"Running a PoS Staking Pool",description:"In this section we present a guide for how to deploy, configure and manage a POS Pool that will allow CFX holders to join to the PoS protocol just interacting with the front-end application of the PoS Pool and without dealing with the technical complexities.",source:"@site/docs/general/mine-stake/stake/running-staking-pool.md",sourceDirName:"general/mine-stake/stake",slug:"/general/mine-stake/stake/running-staking-pool",permalink:"/docs/general/mine-stake/stake/running-staking-pool",draft:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/general/mine-stake/stake/running-staking-pool.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Running a PoS Staking Pool",displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"Staking Considerations",permalink:"/docs/general/mine-stake/stake/staking-considerations"},next:{title:"Run a PoS Node on AWS",permalink:"/docs/general/mine-stake/stake/run-pos-node-on-aws"}},s={},c=[{value:"Reference Architecture",id:"reference-architecture",level:2},{value:"conflux-fans/pos-pool",id:"conflux-fanspos-pool",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Run a full/archive node",id:"run-a-fullarchive-node",level:3},{value:"Deploy PoS Pool Contract",id:"deploy-pos-pool-contract",level:3},{value:"Setup Pool Interface",id:"setup-pool-interface",level:3},{value:"Summary",id:"summary",level:2}],p={toc:c},u="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this section we present a guide for how to deploy, configure and manage a ",(0,r.kt)("strong",{parentName:"p"},"POS Pool")," that will allow CFX holders to join to the PoS protocol just interacting with the front-end application of the PoS Pool and without dealing with the technical complexities. "),(0,r.kt)("h2",{id:"reference-architecture"},"Reference Architecture"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Architecture",src:n(83775).Z,width:"1295",height:"605"})),(0,r.kt)("p",null,"Please note this configuration guide is to do the technical setup of the PoS Pool staking environment."),(0,r.kt)("p",null,"Conflux PoS Pool configuration has two major components: Interface application and full node. It needs technical knowledge for configuration of instances, ports, contracts deployment and storage configuration. "),(0,r.kt)("p",null,"The configuration of a reverse proxy and a firewall is recommended but is out of the scope of this guide."),(0,r.kt)("h2",{id:"conflux-fanspos-pool"},"conflux-fans/pos-pool"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool"},"conflux-fans/pos-pool")," is a open source project that provides a PoS Pool interface and a PoS Pool contract. We can use it to setup a PoS Pool dApp."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"The POS Pool operator needs to have the infrastructure to run the following: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A full/archive node"),(0,r.kt)("li",{parentName:"ul"},"A Web Server Farm, or a single web server to run the POS Pool application ")),(0,r.kt)("h3",{id:"run-a-fullarchive-node"},"Run a full/archive node"),(0,r.kt)("p",null,"First of all, we need to run a full/archive node following the ",(0,r.kt)("a",{parentName:"p",href:"../../run-a-node/"},"instructions")," in the Conflux documentation."),(0,r.kt)("h3",{id:"deploy-pos-pool-contract"},"Deploy PoS Pool Contract"),(0,r.kt)("p",null,"Then we need to deploy the PoS Pool contract following the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool/tree/main/contract#setup"},"instructions")," in pos-pool's documentation."),(0,r.kt)("h3",{id:"setup-pool-interface"},"Setup Pool Interface"),(0,r.kt)("p",null,"Finally, we need to setup the PoS Pool interface following the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool/blob/main/interface/README.md"},"instructions")),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Conflux-fans/pos-pool")," is just a reference implementation of a PoS Pool. Use it at your own risk. If you have encountered any problems, you can check it's ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool/tree/main/contract/docs"},"documentation"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool/tree/main#faqs"},"faqs")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/conflux-fans/pos-pool/issues"},"issues"),"."))}f.isMDXComponent=!0},83775:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/PoSReferenceArchitecture-bb0738164cefdbb3732bd31348c79daf.png"}}]);