"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[9176],{93122:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>u});var i=e(85893),o=e(11151);const r={displayed_sidebar:"generalSidebar"},s="Short-Circuiting",a={id:"general/build/smart-contracts/gas-optimization/shortCircuit",title:"Short-Circuiting",description:"In Solidity, where every blockchain-affecting operation requires gas, short-circuiting is a coding technique that evaluates the second argument of a logical operation only if the first doesn't conclusively determine the outcome, thus significantly reducing unnecessary gas consumption and enhancing efficiency.",source:"@site/docs/general/build/smart-contracts/gas-optimization/shortCircuit.md",sourceDirName:"general/build/smart-contracts/gas-optimization",slug:"/general/build/smart-contracts/gas-optimization/shortCircuit",permalink:"/docs/general/build/smart-contracts/gas-optimization/shortCircuit",draft:!1,unlisted:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/general/build/smart-contracts/gas-optimization/shortCircuit.md",tags:[],version:"current",frontMatter:{displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"Variable Packing",permalink:"/docs/general/build/smart-contracts/gas-optimization/packing"},next:{title:"Uint Types Gas Comparison",permalink:"/docs/general/build/smart-contracts/gas-optimization/uint"}},c={},u=[];function l(n){const t={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"short-circuiting",children:"Short-Circuiting"}),"\n",(0,i.jsx)(t.p,{children:"In Solidity, where every blockchain-affecting operation requires gas, short-circuiting is a coding technique that evaluates the second argument of a logical operation only if the first doesn't conclusively determine the outcome, thus significantly reducing unnecessary gas consumption and enhancing efficiency."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"DemoCode"})}),"\n",(0,i.jsx)(t.p,{children:"Below, we demonstrates how short-circuiting can be applied to minimize gas usage:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract LogicOptimization {\n    // High gas consumption function\n    function heavy() public pure returns (bool ok) {\n        uint num;\n        for (uint256 i = 0; i < 1000; i++) {\n            num = i + 1;\n        }\n        ok = true;\n    }\n\n    // Low gas consumption function\n    function light() public pure returns (bool ok) {\n        ok = true;\n    }\n\n    // No short-circuiting: higher gas usage\n    function basic() external pure {\n        heavy() || light(); // Evaluates both heavy() and light()\n    }\n\n    // With short-circuiting: reduced gas usage\n    function efficient() external pure {\n        light() || heavy(); // light() evaluated first, heavy() skipped if light() is true\n    }\n}\n"})}),"\n",(0,i.jsx)(t.p,{children:"Recommendations for gas optimization:"}),"\n",(0,i.jsxs)(t.p,{children:["\ud83c\udf1f Utilize ",(0,i.jsx)(t.strong,{children:"short-circuiting"})," to prevent unnecessary function calls or computations."]}),"\n",(0,i.jsxs)(t.p,{children:["\ud83c\udf1f Place functions or conditions likely to succeed (or that are less gas-consuming) ",(0,i.jsx)(t.strong,{children:"before"})," others in logical operations."]}),"\n",(0,i.jsx)(t.p,{children:"\ud83c\udf1f Understand the gas cost of operations and structure your code to minimize these costs whenever possible."})]})}function d(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},11151:(n,t,e)=>{e.d(t,{Z:()=>a,a:()=>s});var i=e(67294);const o={},r=i.createContext(o);function s(n){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function a(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:t},n.children)}}}]);