"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[4570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>p});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,p=u["".concat(l,".").concat(f)]||u[f]||d[f]||r;return n?a.createElement(p,s(s({ref:t},h),{},{components:n})):a.createElement(p,s({ref:t},h))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4133:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:1,title:"What is Conflux"},s=void 0,i={unversionedId:"general/conflux-basics/what-is-conflux",id:"general/conflux-basics/what-is-conflux",title:"What is Conflux",description:"Conflux is a new secure and reliable public blockchain with very high",source:"@site/docs/general/conflux-basics/what-is-conflux.md",sourceDirName:"general/conflux-basics",slug:"/general/conflux-basics/what-is-conflux",permalink:"/docs/general/conflux-basics/what-is-conflux",draft:!1,editUrl:"https://github.com/Conflux-Chain/conflux-documentation/edit/main/docs/general/conflux-basics/what-is-conflux.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"What is Conflux"},sidebar:"tutorialSidebar",previous:{title:"Conflux Basics",permalink:"/docs/general/conflux-basics/"},next:{title:"Consensus",permalink:"/docs/general/conflux-basics/consensus-mechanisms/"}},l={},c=[],h={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Conflux is a new secure and reliable public blockchain with very high\nperformance and scalability. It can achieve the same level of decentralization\nand security as Bitcoin and Ethereum but provide more than two orders of\nmagnitude improvement on transaction throughput (TPS) and finality latency.  "),(0,o.kt)("p",null,"The major superiority of Conflux hinges on its novel design of consensus\nprotocol, authenticated storage, and transaction relay protocol. In Conflux\nledger, blocks are organized as ",(0,o.kt)("strong",{parentName:"p"},"Tree-Graph")," where each block references some\nother blocks with one of them being its parent block. By only looking at the\nblocks linked with parent edges, the ledger appears to be a tree structure\n(parental tree), while by looking at all the blocks, it appears to be a directed\nacyclic graph. This is also the reason that we call the ledger structure of\nConflux as Tree-Graph. "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Locale Dropdown",src:n(8842).Z,width:"1920",height:"1024"})),(0,o.kt)("p",null,"The consensus algorithm of Conflux, which is called\n",(0,o.kt)("strong",{parentName:"p"},"Greedy-Heaviest-Adaptive-SubTree")," (GHAST), enables all the nodes in the\nblockchain network to consistently agree on a ",(0,o.kt)("strong",{parentName:"p"},"pivot chain")," of blocks by\napplying the ",(0,o.kt)("em",{parentName:"p"},"heaviest subtree rule")," on the parental tree in the ledger, and in\nturn reach the consensus on the total order of all the blocks based on the pivot\nchain. GHAST also allows the Conflux nodes to detect some attacks (e.g., balance\nattack that tries to generate two balanced subtrees) that may hurt the liveness,\ni.e., the ability to confirm transactions, and thwart these attacks by\nadaptively adjusting the weights of the blocks.  "),(0,o.kt)("p",null,"The Tree-Graph ledger and the GHAST consensus algorithm make Conflux nodes be\nable to quickly generate new blocks without worrying about that the existence of\nforks in the ledger may harm the security of the network, and hence enable the\nsystem to achieve both the high throughput and the low transaction confirmation\nlatency.  "),(0,o.kt)("p",null,"Conflux employs account model and supports the smart contract. Its smart\ncontract is compatible with Solidity, which is Turing complete, as used in\nEthereum. Conflux uses merkle patricia tree as the major structure for its\nauthenticated storage used for the states of the accounts and the smart\ncontracts. Instead of using a single multi-version merkle tree, Conflux uses\nmultiple merkle trees for each version of the states. High-level speaking, it\nconsists of a snapshot tree and the delta trees. The delta tree is always held\nin memory and it contains all the state updates from the last snapshot. The\nsnapshot tree, instead, is read-only during the execution of the transactions.\nThis design makes the transaction execution in Conflux more efficient because it\ncan utilize the memory more effectively when accessing the state in the storage.\nThe delta tree typically contains the most frequently accessed data, and since\nthe state size is small in delta tree, the depth of the tree can also be\nshallow, which makes the memory be able to hold more effective data.  "),(0,o.kt)("p",null,"In addition, Conflux employs a novel transaction relay protocol to improve the\neffective utilization of the network bandwidth for transaction propagation\nsince, in Conflux, the network bandwidth could become the real bottleneck. In\norder to reduce the redundant transaction propagation, a Conflux node first\nsends out to its peers an announcement containing the transaction ids that the\npeers may not have seen before, and then let the peers request the transactions\nthat they really need. Conflux introduces an efficient encoding for the\ntransaction id to achieve a good trade-off between the size and the security."))}d.isMDXComponent=!0},8842:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/tree_graph-21e44896871ef2e96599fcffb89d8096.jpg"}}]);