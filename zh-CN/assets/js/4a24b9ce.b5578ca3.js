"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[569],{263:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=o(85893),i=o(11151);const s={sidebar_position:13,title:"\u8fd0\u884c\u79c1\u6709\u94fe",displayed_sidebar:"generalSidebar"},d="\u8fd0\u884c\u79c1\u6709\u94fe",c={id:"general/run-a-node/advanced-topics/running-independent-chain",title:"\u8fd0\u884c\u79c1\u6709\u94fe",description:"\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u5355\u8282\u70b9\u94fe\u4e0a\u8fd0\u884cConflux\u4ee5\u5f00\u53d1\u548c\u6d4b\u8bd5\u667a\u80fd\u5408\u7ea6\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u53f0\u8ba1\u7b97\u673a\u5c06Conflux\u4f5c\u4e3a\u79c1\u6709\u94fe\u6765\u8fd0\u884c\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/general/run-a-node/advanced-topics/running-independent-chain.md",sourceDirName:"general/run-a-node/advanced-topics",slug:"/general/run-a-node/advanced-topics/running-independent-chain",permalink:"/zh-CN/docs/general/run-a-node/advanced-topics/running-independent-chain",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"\u8fd0\u884c\u79c1\u6709\u94fe",displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"\u8fd0\u884c\u5f52\u6863\u8282\u70b9",permalink:"/zh-CN/docs/general/run-a-node/advanced-topics/running-archive-node"},next:{title:"\u8282\u70b9\u5e38\u89c1\u95ee\u9898\u89e3\u7b54",permalink:"/zh-CN/docs/general/run-a-node/nodes-faqs"}},r={},l=[{value:"\u8fd0\u884c\u5355\u8282\u70b9\u5f00\u53d1\u94fe",id:"\u8fd0\u884c\u5355\u8282\u70b9\u5f00\u53d1\u94fe",level:2},{value:"\u8fd0\u884c\u591a\u8282\u70b9\u751f\u4ea7\u94fe",id:"\u8fd0\u884c\u591a\u8282\u70b9\u751f\u4ea7\u94fe",level:2},{value:"A Simple Instruction",id:"a-simple-instruction",level:2},{value:"Setting Multiple Bootnodes",id:"setting-multiple-bootnodes",level:2},{value:"Setting Genesis Accounts",id:"setting-genesis-accounts",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u8fd0\u884c\u79c1\u6709\u94fe",children:"\u8fd0\u884c\u79c1\u6709\u94fe"}),"\n",(0,t.jsx)(n.p,{children:"\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u5355\u8282\u70b9\u94fe\u4e0a\u8fd0\u884cConflux\u4ee5\u5f00\u53d1\u548c\u6d4b\u8bd5\u667a\u80fd\u5408\u7ea6\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u53f0\u8ba1\u7b97\u673a\u5c06Conflux\u4f5c\u4e3a\u79c1\u6709\u94fe\u6765\u8fd0\u884c\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"\u8fd0\u884c\u5355\u8282\u70b9\u5f00\u53d1\u94fe",children:"\u8fd0\u884c\u5355\u8282\u70b9\u5f00\u53d1\u94fe"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3a\u4e86\u8fd0\u884c\u4e00\u4e2a\u5355\u8282\u70b9\u7684Conflux\u94fe\u7528\u4e8e\u5f00\u53d1\uff0c\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u8fdb\u884c\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u83b7\u53d6\u53ef\u6267\u884c\u7684Conflux\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4f7f\u7528\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u4ece\u6700\u65b0\u7684\u6e90\u4ee3\u7801\u6784\u5efa\uff09 \u4f60\u53ef\u4ee5\u53c2\u8003 ",(0,t.jsx)(n.a,{href:"/zh-CN/docs/general/run-a-node/advanced-topics/downloading-conflux-client",children:"\u4e0b\u8f7dConflux\u5ba2\u6237\u7aef"})," \u6587\u6863"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u5e76\u51c6\u5907\u4e00\u4e2a\u540d\u4e3a ",(0,t.jsx)(n.code,{children:"development.toml"})," \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u53ef\u4ee5\u590d\u5236\u76ee\u5f55\u4e2d\u63d0\u4f9b\u7684",(0,t.jsx)(n.code,{children:"hydra.toml"}),"\u6587\u4ef6\uff0c\u7136\u540e\u6839\u636e ",(0,t.jsx)(n.a,{href:"/zh-CN/docs/general/run-a-node/advanced-topics/configuration-files",children:"\u8282\u70b9\u914d\u7f6e\u6587\u4ef6"})," \u7684\u6307\u5bfc\u8fdb\u884c\u4fee\u6539\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 bootnodes \u53c2\u6570\u8bbe\u7f6e\u4e3a\u7a7a\uff08\u6216\u5c06\u8bbe\u7f6e\u884c\u6ce8\u91ca\u6389\uff09\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 ",(0,t.jsx)(n.code,{children:"mode"}),' \u53c2\u6570\u8bbe\u7f6e\u4e3a "dev"\u3002 \u5982\u679c\u60a8\u662f\u4ece',(0,t.jsx)(n.code,{children:"hydra.toml"}),"\u590d\u5236\u7684\uff0c\u60a8\u5e94\u8be5\u4f1a\u53d1\u73b0\u8be5\u884c\u88ab\u6ce8\u91ca\u4e86\uff0c\u60a8\u53ef\u4ee5\u53d6\u6d88\u6ce8\u91ca\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u8bbe\u7f6e",(0,t.jsx)(n.code,{children:"dev_block_interval_ms"}),"\u53c2\u6570\u4e3a\u60a8\u60f3\u8981\u7684\u533a\u5757\u751f\u6210\u95f4\u9694\u3002 \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0cConflux\u4f1a\u4ee5\u56fa\u5b9a\u95f4\u9694\u81ea\u52a8\u751f\u6210\u533a\u5757\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u4f7f\u7528",(0,t.jsx)(n.code,{children:"development.toml"}),"\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\u8fd0\u884cConflux\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 \u4f8b\u5982\uff1a"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ ./conflux --config development.toml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u8fd0\u884c\u591a\u8282\u70b9\u751f\u4ea7\u94fe",children:"\u8fd0\u884c\u591a\u8282\u70b9\u751f\u4ea7\u94fe"}),"\n",(0,t.jsx)(n.p,{children:"\u8981\u62e5\u6709\u81ea\u5df1\u7684Conflux\u94fe\uff0c\u5e76\u5728\u751f\u4ea7\u6a21\u5f0f\u4e0b\u62e5\u6709\u591a\u4e2a\u8282\u70b9\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u60a8\u7684\u8282\u70b9\u53ef\u4ee5\u8fde\u63a5\u5230\u8fd9\u4e2a\u94fe\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fde\u63a5\u5230\u5176\u4ed6\u94fe\uff08\u5982Conflux\u7684\u6d4b\u8bd5\u7f51\uff09\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e3a\u6b64\uff0c\u60a8\u5e94\u8be5\u8bbe\u7f6e\u81ea\u5df1\u7684\u542f\u52a8\u8282\u70b9\uff0c\u5e76\u8ba9\u5176\u4ed6\u8282\u70b9\u8fde\u63a5\u5230\u5b83\u3002 \u7136\u540e\uff0c\u5b83\u4eec\u5c06\u901a\u8fc7\u6211\u4eec\u7684\u53d1\u73b0\u534f\u8bae\u8fde\u63a5\u5230\u5176\u4ed6\u8282\u70b9\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u60a8\u9700\u8981\u542f\u52a8\u8282\u70b9\u7684IP\u5730\u5740\u3001\u7aef\u53e3\u53f7\u548c\u8282\u70b9ID\uff0c\u4ee5\u4fbf\u5176\u4ed6\u8282\u70b9\u8fde\u63a5\u3002 \u8282\u70b9ID\u662f\u7f51\u7edc\u5c42\u7528\u4e8e\u8bc6\u522b\u7684\u8282\u70b9\u552f\u4e00\u79c1\u94a5\u5bf9\u5e94\u7684\u516c\u94a5\u3002 \u4ee5\u4e0b\u662f\u8ba9\u542f\u52a8\u8282\u70b9\u81ea\u52a8\u751f\u6210\u5176\u79c1\u94a5\u5e76\u901a\u8fc7\u65e5\u5fd7\u6587\u4ef6\u83b7\u53d6\u8282\u70b9ID\u7684\u6307\u5bfc\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"a-simple-instruction",children:"A Simple Instruction"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u83b7\u53d6\u53ef\u6267\u884c\u7684Conflux\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4f7f\u7528\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u4ece\u6700\u65b0\u7684\u6e90\u4ee3\u7801\u6784\u5efa\uff09 \u4f60\u53ef\u4ee5\u53c2\u8003 ",(0,t.jsx)(n.a,{href:"/zh-CN/docs/general/run-a-node/advanced-topics/downloading-conflux-client",children:"\u4e0b\u8f7dConflux\u5ba2\u6237\u7aef"})," \u6587\u6863"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5e76\u4e3a\u542f\u52a8\u8282\u70b9\u51c6\u5907\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6",(0,t.jsx)(n.code,{children:"bootnode.toml"}),"\uff08\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a32323\uff09\u3002 \u60a8\u53ef\u4ee5\u53c2\u8003",(0,t.jsx)(n.a,{href:"/zh-CN/docs/general/run-a-node/advanced-topics/configuration-files",children:"\u8282\u70b9\u914d\u7f6e\u6587\u4ef6"}),"\u6587\u6863\u3002"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\u786e\u4fdd `bootnode.toml` \u4e0d\u5305\u542b `bootnode` \u6761\u76ee\uff0c\u5e76\u4e14 `network` \u7684\u65e5\u5fd7\u7ea7\u522b\u81f3\u5c11\u4e3a `debug` \u3002\n\n$ mkdir run\n$ cd run\n# \u5c06Conflux\u53ef\u6267\u884c\u6587\u4ef6`conflux`\u548c\u914d\u7f6e\u6587\u4ef6`bootnode.toml`\u653e\u5728`run`\u4e0b\n\n\n\u5982\u679c\u60a8\u662f\u57fa\u4e8e\u6211\u4eec\u63d0\u4f9b\u7684hydra.toml\u8fdb\u884c\u7f16\u8f91\uff0c\u9700\u8981\u6ce8\u91ca\u6389bootnode\u6761\u76ee\u3002 \u5426\u5219\u8282\u70b9\u5c06\u8fde\u63a5\u5230\u73b0\u6709\u7684Conflux\u7f51\u7edc\u3002\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Launch the bootnode, and find the node id in the console print out. The information for node id is ",(0,t.jsx)(n.code,{children:"Self node id: $ID"})," where ",(0,t.jsx)(n.code,{children:"$ID"})," is the 0x-prefixed node id of this bootnode. Remove the 0x prefix and you'll get the node id ",(0,t.jsx)(n.code,{children:"$NODEID"}),". If you missed the line from the screen, you can look at the log file with:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'grep "Self node id" log/conflux.log|awk \'{print $9}\'|sed -e "s/^0x//"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Now we have the ",(0,t.jsx)(n.code,{children:"$IP"}),", ",(0,t.jsx)(n.code,{children:"$PORT$"}),", and ",(0,t.jsx)(n.code,{children:"$NODEID"})," of the boot node, we can get the url for this boot node with the format ",(0,t.jsx)(n.code,{children:"cfxnode://$NODEID@$IP:$PORT"}),". Denote this as ",(0,t.jsx)(n.code,{children:"$BOOTNODE_URL"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Start other nodes by setting ",(0,t.jsx)(n.code,{children:'bootnodes="$BOOTNODE_URL"'})," in their configuration."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Note that with the instruction above, other nodes connected to the boot node will stay in untrusted state for a while (3 days by default), and untrusted nodes will not be broadcast in our discovery protocol. Thus, the network structure will be a star with the boot node in the center before other nodes are promoted to trusted state. You can change ",(0,t.jsx)(n.code,{children:"node_table_promotion_timeout_s"})," in the configurations to make this period shorter."]}),"\n",(0,t.jsx)(n.h2,{id:"setting-multiple-bootnodes",children:"Setting Multiple Bootnodes"}),"\n",(0,t.jsxs)(n.p,{children:["You can also setup multiple bootnodes at the very beginning. However, this cannot be done by simply replaying the boot node setup steps above multiple times, because you need to set ",(0,t.jsx)(n.code,{children:"bootnodes"})," of every boot node before they are started."]}),"\n",(0,t.jsx)(n.p,{children:"One way to achieve this is to start these bootnodes and stop them immediately. Then gather their node ids, set their configuration, and restart them all."}),"\n",(0,t.jsxs)(n.p,{children:["Another better way is to generate their private keys seperately, and manually set their ",(0,t.jsx)(n.code,{children:"net_key"})," to start. This can be done with the functions provided in our python test framework in the directory ",(0,t.jsx)(n.code,{children:"test"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"from conflux.utils import *\n\nnum_of_bootnodes=10\nfor _ in range(num_of_bootnodes):\n    pri_key, pub_key = ec_random_keys()\n    node_id = encode_hex(encode_int32(pub_key[0]) + encode_int32(pub_key[1]))\n    print(encode_hex(pri_key), node_id)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then you can construct the bootnode url with the generated node id, and start each node by setting the ",(0,t.jsx)(n.code,{children:'net_key="$NET_KEY"'})," field to the private key or pass it with the command line option ",(0,t.jsx)(n.code,{children:"--net-key $NET_KEY"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"setting-genesis-accounts",children:"Setting Genesis Accounts"}),"\n",(0,t.jsxs)(n.p,{children:["In a production environment, you can initialize the initial genesis state with your accounts by setting the ",(0,t.jsx)(n.code,{children:"genesis_accounts"})," to an account file with formats like"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'0f947e34fc907008968ec99baa1dbb677b927531="1000000000000"\nab4a32bca7500d94a2cc1f3150e12686c692c590="1000000000000"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Every line is an account. The key is the account address, and the value is a string representing its balance in Drip. Note that ",(0,t.jsx)(n.code,{children:"genesis_accounts"})," does not apply if ",(0,t.jsx)(n.code,{children:"mode"})," is ",(0,t.jsx)(n.code,{children:"test"})," or ",(0,t.jsx)(n.code,{children:"dev"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.code,{children:"mode"})," is ",(0,t.jsx)(n.code,{children:"test"})," or ",(0,t.jsx)(n.code,{children:"dev"}),", you can setup the genesis accounts with their secret keys by setting ",(0,t.jsx)(n.code,{children:"genesis_secrets"}),". Each line is an account private key without 0x-prefix. The balance of each account is set to ",(0,t.jsx)(n.code,{children:"10000000000000000000000"})," by default."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>c,a:()=>d});var t=o(67294);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);