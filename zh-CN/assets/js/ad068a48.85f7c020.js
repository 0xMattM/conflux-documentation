"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[4869],{92106:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(85893),s=t(11151);const o={displayed_sidebar:"generalSidebar"},a="Comparison Operators",i={id:"general/build/smart-contracts/gas-optimization/LessThan",title:"Comparison Operators",description:"In the Ethereum Virtual Machine (EVM), the selection of comparison operators influences the efficiency and gas consumption of smart contracts. Opting for ` (greater than) over \u2264 (less than or equal to) and \u2265 (greater than or equal to) is notably more gas-efficient. This is due to the absence of direct opcode instructions for \u2264 and \u2265` in the EVM's design, which requires additional operations to achieve these comparisons.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/general/build/smart-contracts/gas-optimization/LessThan.md",sourceDirName:"general/build/smart-contracts/gas-optimization",slug:"/general/build/smart-contracts/gas-optimization/LessThan",permalink:"/zh-CN/docs/general/build/smart-contracts/gas-optimization/LessThan",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",frontMatter:{displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"Memory vs Calldata",permalink:"/zh-CN/docs/general/build/smart-contracts/gas-optimization/memoryAndCalldata"},next:{title:"\u4f4d\u56fe\u548c\u4f4d\u8fd0\u7b97",permalink:"/zh-CN/docs/general/build/smart-contracts/gas-optimization/bitmap"}},c={},l=[];function d(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"comparison-operators",children:"Comparison Operators"}),"\n",(0,r.jsxs)(n.p,{children:["In the Ethereum Virtual Machine (EVM), the selection of comparison operators influences the efficiency and gas consumption of smart contracts. Opting for ",(0,r.jsx)(n.code,{children:"<"})," (less than) and ",(0,r.jsx)(n.code,{children:">"})," (greater than) over ",(0,r.jsx)(n.code,{children:"\u2264"})," (less than or equal to) and ",(0,r.jsx)(n.code,{children:"\u2265"})," (greater than or equal to) is notably more gas-efficient. This is due to the absence of direct opcode instructions for ",(0,r.jsx)(n.code,{children:"\u2264"})," and ",(0,r.jsx)(n.code,{children:"\u2265"})," in the EVM's design, which requires additional operations to achieve these comparisons."]}),"\n",(0,r.jsxs)(n.p,{children:["Given that iszero consumes 3 units of gas, utilizing ",(0,r.jsx)(n.code,{children:"\u2264"})," and ",(0,r.jsx)(n.code,{children:"\u2265"})," in contracts that frequently perform comparisons can lead to increased gas expenditures."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u4ee3\u7801\u6f14\u793a"})}),"\n",(0,r.jsxs)(n.p,{children:["Below are examples of code achieving the same result using ",(0,r.jsx)(n.code,{children:"<"})," and ",(0,r.jsx)(n.code,{children:"<="}),", respectively."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"contract CompareLessThan {\n    // gas: 247\n    function isSmallerThan(uint256 value) external pure returns (bool) {\n        return value < 8;\n    }\n}\n\ncontract CompareLessThanOrEqual {\n    // gas: 250\n    function isSmallerThanOrEqual(uint256 value) external pure returns (bool) {\n        return value <= 7;\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Assuming ",(0,r.jsx)(n.code,{children:"value"})," is 7, both functions will return the same result. However, the ",(0,r.jsx)(n.code,{children:"<"})," operator will be more gas-efficient than the ",(0,r.jsx)(n.code,{children:"<="})," operator."]}),"\n",(0,r.jsx)(n.p,{children:"\u5173\u4e8e gas \u4f18\u5316\u7684\u5efa\u8bae\uff1a"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83c\udf1f Using the ",(0,r.jsx)(n.code,{children:"<"})," and ",(0,r.jsx)(n.code,{children:">"})," operators is more gas-efficient than ",(0,r.jsx)(n.code,{children:"<="})," and ",(0,r.jsx)(n.code,{children:">="})," in smart contracts."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var r=t(67294);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);