"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[8663],{55546:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(85893),r=t(11151);const o={title:"Access Control Vulnerabilities",displayed_sidebar:"generalSidebar"},s=void 0,c={id:"general/build/smart-contracts/contract-security/access-control-exploit",title:"Access Control Vulnerabilities",description:"Access control vulnerabilities in smart contracts were one of the primary factors leading to the Poly Network cross-chain bridge hack with losses of $611 million and contributed to a $300,000 hack of the ShadowFi DeFi project on Binance Smart Chain (BSC).",source:"@site/docs/general/build/smart-contracts/contract-security/access-control-exploit.md",sourceDirName:"general/build/smart-contracts/contract-security",slug:"/general/build/smart-contracts/contract-security/access-control-exploit",permalink:"/zh-CN/docs/general/build/smart-contracts/contract-security/access-control-exploit",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",frontMatter:{title:"Access Control Vulnerabilities",displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"\u667a\u80fd\u5408\u7ea6\u5b89\u5168",permalink:"/zh-CN/docs/general/build/smart-contracts/contract-security/"},next:{title:"Re-entrancy Attacks",permalink:"/zh-CN/docs/general/build/smart-contracts/contract-security/reentrancy-attack"}},a={},l=[{value:"Prevention Strategies",id:"prevention-strategies",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Access control vulnerabilities in smart contracts were one of the primary factors leading to the Poly Network cross-chain bridge hack with losses of $611 million and contributed to a $300,000 hack of the ShadowFi DeFi project on Binance Smart Chain (BSC)."}),"\n",(0,i.jsx)(n.p,{children:"More insights on the detailed incidents of these attacks can be gleaned from the following two articles:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://blog.kraken.com/product/security/abusing-smart-contracts-to-steal-600-million-how-the-poly-network-hack-actually-happened",children:"Abusing Smart Contracts to Steal $600 million: How the Poly Network Hack Actually Happened"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://medium.com/quillhash/shadowfi-301k-burn-function-exploit-analysis-quillaudits-45a17ce04193",children:"ShadowFi $301K Burn function Exploit Analysis"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Access control in smart contracts defines the permissions of different roles within the application. Typically, actions such as minting tokens, withdrawing funds, or pausing transactions require users with higher privileges. Incorrect configuration of these permissions can lead to unforeseen losses."}),"\n",(0,i.jsx)(n.p,{children:"Below, we discuss two common types of access control vulnerabilities."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Misconfigured Permissions"})}),"\n",(0,i.jsx)(n.p,{children:"Lack of proper access control on critical functions allows anyone to mint an excessive number of tokens or withdraw all funds from the contract. For instance, the Poly Network bridge contract failed to restrict the function for transferring guardianship, allowing a hacker to redirect $611 million to their own address."}),"\n",(0,i.jsxs)(n.p,{children:["In the following code, the ",(0,i.jsx)(n.code,{children:"flawedCreateToken()"})," function lacks access restrictions, permitting unrestricted token minting by any user."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// Flawed createToken function without access control\nfunction flawedCreateToken(address recipient, uint256 quantity) public {\n    _mint(recipient, quantity);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Flawed Authorization Checks"})}),"\n",(0,i.jsxs)(n.p,{children:["Another common vulnerability arises when functions do not verify whether the caller has sufficient permissions. For example, ShadowFi's token contract on BSC omitted a crucial check in its ",(0,i.jsx)(n.code,{children:"burn"})," function, allowing attackers to arbitrarily burn tokens owned by other addresses. After burning tokens in the liquidity pool, the hacker could extract all ",(0,i.jsx)(n.code,{children:"BNB"})," from the pool by selling a minimal amount of tokens, netting $300,000."]}),"\n",(0,i.jsxs)(n.p,{children:["In the provided code snippet, the ",(0,i.jsx)(n.code,{children:"flawedDestroyToken()"})," function does not implement necessary authorization checks, thereby allowing any user to burn tokens without restrictions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// Flawed destroyToken function without proper authorization checks\nfunction flawedDestroyToken(address holder, uint256 quantity) public {\n    _burn(holder, quantity);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"prevention-strategies",children:"Prevention Strategies"}),"\n",(0,i.jsx)(n.p,{children:"There are two main strategies to prevent access control vulnerabilities:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Utilize access control libraries like ",(0,i.jsx)(n.a,{href:"https://docs.openzeppelin.com/contracts/5.x/access-control",children:"OpenZeppelin"})," to assign appropriate permissions to special functions, for instance using the ",(0,i.jsx)(n.code,{children:"OnlyOwner"})," modifier to restrict function calls to the contract owner."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// Correct createToken function using the onlyOwner modifier for access control\nfunction correctCreateToken(address recipient, uint256 quantity) public onlyOwner {\n    _mint(recipient, quantity);\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Ensure that function logic verifies the caller has the necessary permissions."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// Correct destroyToken function with authorization check\nfunction correctDestroyToken(address holder, uint256 quantity) public {\n    if(msg.sender != holder){\n        _spendAllowance(holder, msg.sender, quantity);\n    }\n    _burn(holder, quantity);\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var i=t(67294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);