"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[746],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),s=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(d.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,f=p["".concat(d,".").concat(u)]||p[u]||m[u]||o;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},98058:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_position:1,title:"AdminControl",displayed_sidebar:"coreSidebar"},i=void 0,c={unversionedId:"core/core-space-basics/internal-contracts/admin",id:"core/core-space-basics/internal-contracts/admin",title:"AdminControl",description:"Overview",source:"@site/docs/core/core-space-basics/internal-contracts/admin.md",sourceDirName:"core/core-space-basics/internal-contracts",slug:"/core/core-space-basics/internal-contracts/admin",permalink:"/zh-CN/docs/core/core-space-basics/internal-contracts/admin",draft:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"AdminControl",displayed_sidebar:"coreSidebar"},sidebar:"coreSidebar",previous:{title:"Internal Contracts",permalink:"/zh-CN/docs/core/core-space-basics/internal-contracts/"},next:{title:"SponsorWhitelistControl",permalink:"/zh-CN/docs/core/core-space-basics/internal-contracts/sponsor-whitelist-control"}},d={},s=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"JS Example",id:"js-example",level:2}],l={toc:s},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"AdminControl")," contract is a debug tool for contract development. When a contract is created during a transaction, the sender for the current transaction will become the contract admin automatically."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," address can transfer the administrator rights to another ",(0,a.kt)("strong",{parentName:"p"},"normal address")," or ",(0,a.kt)("strong",{parentName:"p"},"zero address")," by calling interface ",(0,a.kt)("inlineCode",{parentName:"p"},"setAdmin(address contractAddr, address newAdmin)"),". ",(0,a.kt)("strong",{parentName:"p"},"A contract can never be an admin"),". "),(0,a.kt)("p",null,"The admin of a contract has several administrator rights. It can call interface ",(0,a.kt)("inlineCode",{parentName:"p"},"destroy(address contractAddr)")," to destroy contract, just like a contract calling ",(0,a.kt)("inlineCode",{parentName:"p"},"suicide()")," function. The SponsorWhitelist internal contract provides some functions can only be called by admin address. These functions can update the whitelist in sponsor mechanism. They will be introduced later. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note: For all the interfaces requiring administrator rights, no matter the execution success or not, no error or exception will be triggered during internal contract execution.")," For example, if a non-admin address tries to transfer the admin address to itself, this transaction will success but nothing will be changed. "),(0,a.kt)("p",null,"ConfluxScan may mark a contract as debug mode if the contract has non-zero admin address. ",(0,a.kt)("strong",{parentName:"p"},"So remember, if you think the contract is ready for production environment, you should set admin address to zero.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"AdminControl")," contract also provides a query interface ",(0,a.kt)("inlineCode",{parentName:"p"},"getAdmin(address contractAddr)")," which can be called by anyone. "),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Corner cases:")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The admin is set at the start of contract creation. So if sender ",(0,a.kt)("inlineCode",{parentName:"li"},"A")," creates contract ",(0,a.kt)("inlineCode",{parentName:"li"},"B")," and set admin to ",(0,a.kt)("inlineCode",{parentName:"li"},"C")," during contract construction, the admin will be ",(0,a.kt)("inlineCode",{parentName:"li"},"C")," when the contract is deployed. "),(0,a.kt)("li",{parentName:"ol"},"However, if sender ",(0,a.kt)("inlineCode",{parentName:"li"},"A")," calls contract ",(0,a.kt)("inlineCode",{parentName:"li"},"B"),", then contract ",(0,a.kt)("inlineCode",{parentName:"li"},"B")," creates contract ",(0,a.kt)("inlineCode",{parentName:"li"},"C")," and then set admin to ",(0,a.kt)("inlineCode",{parentName:"li"},"D")," during contract contraction, then the set will fail because the admin of ",(0,a.kt)("inlineCode",{parentName:"li"},"C")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"A")," and the sender for creating ",(0,a.kt)("inlineCode",{parentName:"li"},"C")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"B"),". "),(0,a.kt)("li",{parentName:"ol"},"But, Conflux introduces a special policy. In case 2, if ",(0,a.kt)("inlineCode",{parentName:"li"},"D")," is zero address, the set admin will success. ",(0,a.kt)("strong",{parentName:"li"},'This means that a contract can declare "I don\'t need admin" during contract creation.'))),(0,a.kt)("h2",{id:"interface"},"Interface"),(0,a.kt)("p",null,"AdminControl's hex40 address is ",(0,a.kt)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000000"),", with interface:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"pragma solidity >=0.4.15;\n\ncontract AdminControl {\n    /*** Query Functions ***/\n    /**\n     * @dev get admin of specific contract\n     * @param contractAddr The address of specific contract\n     */\n    function getAdmin(address contractAddr) public view returns (address) {}\n    \n    /**\n     * @dev Contract admin set the administrator of contract `contractAddr` to `newAdmin`.\n     * @param contractAddr The address of the contract\n     * @param newAdmin The new admin address\n     */\n    function setAdmin(address contractAddr, address newAdmin) public {}\n\n   /**\n     * @dev Contract admin destroy contract `contractAddr`.\n     * @param contractAddr The contract to be destroied\n     */\n    function destroy(address contractAddr) public {}\n}\n")),(0,a.kt)("h2",{id:"js-example"},"JS Example"),(0,a.kt)("p",null,"Consider you have deployed a contract whose address is ",(0,a.kt)("inlineCode",{parentName:"p"},"contractAddr"),". The administrator can call ",(0,a.kt)("inlineCode",{parentName:"p"},"AdminControl.setAdmin(contractAddr, new_admin)")," to change the administrator and call ",(0,a.kt)("inlineCode",{parentName:"p"},"AdminControl.destroy(contractAddr)")," to kill the contract. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { Conflux } = require('js-conflux-sdk');\n\nfunction main() {\n    const cfx = new Conflux({\n    url: 'https://test.confluxrpc.com',\n    networkId: 1,\n    });\n\n    const PRIVATE_KEY = '0xxxxxxx';\n    const account = cfx.wallet.addPrivateKey(PRIVATE_KEY); // create account instance\n\n    const adminContract = cfx.InternalContract('AdminControl');\n\n    // make sure account is the admin of contractAddr\n    const contractAddr = 'cfxtest:acepe88unk7fvs18436178up33hb4zkuf62a9dk1gv';\n\n    // to change administrator\n    adminContract.setAdmin(contractAddr, new_admin).sendTransaction({\n    from: account,\n    }).executed();\n\n    // to kill the contract\n    adminContract.destroy(contractAddr).sendTransaction({\n    from: account,\n    }).executed();\n}\n\nmain();\n")))}m.isMDXComponent=!0}}]);