"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[6728],{84984:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>r});var s=c(85893),o=c(11151);const t={id:"cli_sub_commands",title:"\u547d\u4ee4\u884c\u53ef\u7528\u547d\u4ee4",sidebar_position:8,keywords:["conflux","cli","sdk"],displayed_sidebar:"generalSidebar"},l=void 0,a={id:"general/run-a-node/advanced-topics/cli_sub_commands",title:"\u547d\u4ee4\u884c\u53ef\u7528\u547d\u4ee4",description:"Conflux CLI sub-commands is a collection of command line interfaces which allows you to interact with a local or remote Conflux node.",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/general/run-a-node/advanced-topics/cli.md",sourceDirName:"general/run-a-node/advanced-topics",slug:"/general/run-a-node/advanced-topics/cli_sub_commands",permalink:"/zh-CN/docs/general/run-a-node/advanced-topics/cli_sub_commands",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"cli_sub_commands",title:"\u547d\u4ee4\u884c\u53ef\u7528\u547d\u4ee4",sidebar_position:8,keywords:["conflux","cli","sdk"],displayed_sidebar:"generalSidebar"},sidebar:"generalSidebar",previous:{title:"\u8282\u70b9\u914d\u7f6e\u6587\u4ef6",permalink:"/zh-CN/docs/general/run-a-node/advanced-topics/configuration-files"},next:{title:"\u5b98\u65b9\u542f\u52a8\u8282\u70b9\u5217\u8868",permalink:"/zh-CN/docs/general/run-a-node/advanced-topics/official-bootnodes"}},i={},r=[{value:"Manage Accounts",id:"manage-accounts",level:2},{value:"new",id:"new",level:3},{value:"Usage",id:"usage",level:4},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:4},{value:"list",id:"list",level:3},{value:"Usage",id:"usage-1",level:4},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-1",level:4},{value:"import",id:"import",level:3},{value:"Usage",id:"usage-2",level:4},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-2",level:4},{value:"Public APIs",id:"public-apis",level:2},{value:"Get balance",id:"get-balance",level:3},{value:"Get nonce",id:"get-nonce",level:3},{value:"Get current epoch number",id:"get-current-epoch-number",level:3},{value:"Get block(s)",id:"get-blocks",level:3},{value:"Get transaction",id:"get-transaction",level:3},{value:"Get receipt",id:"get-receipt",level:3},{value:"Send signed transaction",id:"send-signed-transaction",level:3},{value:"Misc",id:"misc",level:3},{value:"Private APIs",id:"private-apis",level:2},{value:"net",id:"net",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-3",level:4},{value:"txpool",id:"txpool",level:3},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-4",level:4},{value:"sync-phase",id:"sync-phase",level:3},{value:"Send transaction",id:"send-transaction",level:3},{value:"Usage",id:"usage-3",level:4},{value:"\u793a\u4f8b",id:"\u793a\u4f8b-5",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Conflux CLI sub-commands is a collection of command line interfaces which allows you to interact with a local or remote Conflux node."}),"\n",(0,s.jsx)(n.h2,{id:"manage-accounts",children:"Manage Accounts"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"account"})," sub-command allows you to manage accounts at local machine."]}),"\n",(0,s.jsx)(n.h3,{id:"new",children:"new"}),"\n",(0,s.jsx)(n.p,{children:"Create a new account at local machine."}),"\n",(0,s.jsx)(n.h4,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux account new --help\nCreate a new account (and its associated key) for the given --chain (default conflux).\n\nUSAGE:\n    conflux account new [OPTIONS]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n        --keys-iterations <NUM>    Specify the number of iterations to use when deriving key from the password (bigger is more secure). [default: 10240]\n        --password <FILE>          Provide a file containing a password for unlocking an account. Leading and trailing whitespace is trimmed.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux account new"})}),"\n",(0,s.jsx)(n.h3,{id:"list",children:"list"}),"\n",(0,s.jsx)(n.p,{children:"List all accounts at local machine."}),"\n",(0,s.jsx)(n.h4,{id:"usage-1",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux account list --help\nList existing accounts of the given --chain (default conflux).\n\nUSAGE:\n    conflux account list\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n"})}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b-1",children:"\u793a\u4f8b"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux account list"})}),"\n",(0,s.jsx)(n.h3,{id:"import",children:"import"}),"\n",(0,s.jsx)(n.p,{children:"Import accounts from JSON UTC keystore files."}),"\n",(0,s.jsx)(n.h4,{id:"usage-2",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux account import --help\nImport accounts from JSON UTC keystore files to the specified --chain (default conflux)\n\nUSAGE:\n    conflux account import --import-path <PATH>...\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n        --import-path <PATH>...    A list of file paths to import.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b-2",children:"\u793a\u4f8b"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux account import --import-path ./keystores"})}),"\n",(0,s.jsx)(n.h2,{id:"public-apis",children:"Public APIs"}),"\n",(0,s.jsxs)(n.p,{children:["Public API allows you to interact with a local or remote Conflux node via HTTP connection in JSON-RPC protocol. All public APIs are under ",(0,s.jsx)(n.code,{children:"rpc"})," sub-command, and access to the JSON-RPC API at local machine with default ",(0,s.jsx)(n.code,{children:"url"})," option."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"OPTIONS:\n        --url <url>    URL of RPC server [default: http://localhost:12539]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To access JSON-RPC API of remote Conflux node, please specify the  correct ",(0,s.jsx)(n.code,{children:"--url"})," option (e.g. ",(0,s.jsx)(n.a,{href:"http://10.1.5.6:12537",children:"http://10.1.5.6:12537"}),"). By default, JSON-RPC is enabled only for local access for security consideration. You can manually enable remote access by configuring ",(0,s.jsx)(n.code,{children:"jsonrpc_http_port"})," in ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"default.toml"})})," file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:"# jsonrpc_tcp_port=12536\njsonrpc_http_port=12537\n# jsonrpc_local_tcp_port=12538\njsonrpc_local_http_port=12539\n"})}),"\n",(0,s.jsx)(n.p,{children:"All available commands are as following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux rpc --help\nRPC based subcommands to query blockchain information and send transactions\n\nUSAGE:\n    conflux rpc [OPTIONS] <SUBCOMMAND>\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n        --url <url>    URL of RPC server [default: http://localhost:12539]\n\nSUBCOMMANDS:\n    balance                  Get balance of specified account\n    best-block-hash          Get the best block hash\n    block-by-epoch           Get block by epoch\n    block-by-hash            Get block by hash\n    block-with-assumption    Get block by hash with pivot chain assumption\n    blocks                   Get blocks of specified epoch\n    call                     Executes a new message call immediately without creating a transaction\n    code                     Get bytecode of specified contract\n    local                    Local subcommands (requires jsonrpc_local_http_port configured)\n    epoch                    Get epoch number\n    estimate-gas             Executes a call request immediately without creating a transaction and returns the gas used\n    help                     Prints this message or the help of the given subcommand(s)\n    nonce                    Get nonce of specified account\n    price                    Get recent mean gas price\n    receipt                  Get receipt by transaction hash\n    send                     Send a signed transaction and return its hash\n    tx                       Get transaction by hash\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-balance",children:"Get balance"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc balance --address cfx:type.user:aarc9abycue0hhzgyrr53m6cxedgccrmmyybjgh4xg"})}),"\n",(0,s.jsx)(n.h3,{id:"get-nonce",children:"Get nonce"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc nonce --address cfx:type.user:aarc9abycue0hhzgyrr53m6cxedgccrmmyybjgh4xg"})}),"\n",(0,s.jsx)(n.h3,{id:"get-current-epoch-number",children:"Get current epoch number"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc epoch"})}),"\n",(0,s.jsx)(n.h3,{id:"get-blocks",children:"Get block(s)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Get Best block hash: ",(0,s.jsx)(n.code,{children:"./conflux rpc best-block-hash"})]}),"\n",(0,s.jsxs)(n.li,{children:["Get block by epoch: ",(0,s.jsx)(n.code,{children:"./conflux rpc block-by-epoch --epoch latest_state"})]}),"\n",(0,s.jsxs)(n.li,{children:["Get block by height: ",(0,s.jsx)(n.code,{children:"./conflux rpc block-by-epoch --epoch 0x10"})]}),"\n",(0,s.jsxs)(n.li,{children:["Get blocks in epoch: ",(0,s.jsx)(n.code,{children:"./conflux rpc blocks --epoch latest_state"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"get-transaction",children:"Get transaction"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc tx --hash 0x718532fe76dbd8c4208c6c5a79588db35c0bf97e7d8a0faa5988ba66ad88b74c"})}),"\n",(0,s.jsx)(n.h3,{id:"get-receipt",children:"Get receipt"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc receipt --hash 0x718532fe76dbd8c4208c6c5a79588db35c0bf97e7d8a0faa5988ba66ad88b74c"})}),"\n",(0,s.jsx)(n.h3,{id:"send-signed-transaction",children:"Send signed transaction"}),"\n",(0,s.jsxs)(n.p,{children:["Send a signed transaction which encoded in HEX format. Generally, this API is used for Java-Script API to send encoded transaction. To send a transaction with CLI, suggest to use private API ",(0,s.jsx)(n.a,{href:"#send-transaction",children:"send transaction"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc send --raw-bytes 0x..."})}),"\n",(0,s.jsx)(n.h3,{id:"misc",children:"Misc"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Get contract code: ",(0,s.jsx)(n.code,{children:"./conflux rpc code --address cfx:type.contract:acc7uawf5ubtnmezvhu9dhc6sghea0403y2dgpyfjp"})]}),"\n",(0,s.jsxs)(n.li,{children:["Get recent mean gas price: ",(0,s.jsx)(n.code,{children:"./conflux rpc price"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"private-apis",children:"Private APIs"}),"\n",(0,s.jsxs)(n.p,{children:["Private API allows you to interact with local Conflux node ",(0,s.jsx)(n.strong,{children:"only"})," via HTTP connection in JSON-RPC protocol. Private APIs are provided for user to manage the local Conflux node, and requires the ",(0,s.jsx)(n.code,{children:"jsonrpc_local_http_port"})," configured in ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"default.toml"})})," configuration file."]}),"\n",(0,s.jsx)(n.p,{children:"In addition, private APIs also helps developers to debug, test, and monitor the runtime of Conflux node."}),"\n",(0,s.jsxs)(n.p,{children:["All private APIs are under ",(0,s.jsx)(n.code,{children:"local"})," sub-command, and access to the JSON-RPC API at local machine with default ",(0,s.jsx)(n.code,{children:"url"})," option."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux rpc local --help\nDebug subcommands (requires jsonrpc_local_http_port configured)\n\nUSAGE:\n    conflux rpc local [OPTIONS] <SUBCOMMAND>\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n        --url <url>    URL of RPC server [default: http://localhost:12539]\n\nSUBCOMMANDS:\n    consensus-graph-state    Get the consensus graph state\n    help                     Prints this message or the help of the given subcommand(s)\n    net                      Network subcommands\n    send                     Send a transaction and return its hash\n    sync-phase               Get the current synchronization phase\n    test                     Test subcommands (used for test purpose only)\n    txpool                   Transaction pool subcommands\n"})}),"\n",(0,s.jsx)(n.h3,{id:"net",children:"net"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"net"})," sub-command helps you to inspect the P2P network status."]}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b-3",children:"\u793a\u4f8b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["List all connected P2P nodes: ",(0,s.jsx)(n.code,{children:"./conflux rpc local net session"})]}),"\n",(0,s.jsxs)(n.li,{children:["List a single P2P node: ",(0,s.jsx)(n.code,{children:"./conflux rpc local net session --id <node_id>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Check network egress: ",(0,s.jsx)(n.code,{children:"./conflux rpc local net throttling"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"txpool",children:"txpool"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"txpool"})," sub-command helps you to inspect the transaction pool."]}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b-4",children:"\u793a\u4f8b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["List transaction pool status: ",(0,s.jsx)(n.code,{children:"./conflux rpc local txpool status"})]}),"\n",(0,s.jsxs)(n.li,{children:["List transactions in details: ",(0,s.jsx)(n.code,{children:"./conflux rpc local txpool content"})]}),"\n",(0,s.jsxs)(n.li,{children:["List summary of transactions: ",(0,s.jsx)(n.code,{children:"./conflux rpc local txpool inspect"})]}),"\n",(0,s.jsxs)(n.li,{children:["Inspect a transaction in detail: ",(0,s.jsx)(n.code,{children:"./conflux rpc local txpool inspect-one --hash <tx_hash>"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sync-phase",children:"sync-phase"}),"\n",(0,s.jsx)(n.p,{children:"Get the synchronization phase of local conflux node."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc local sync-phase"})}),"\n",(0,s.jsx)(n.h3,{id:"send-transaction",children:"Send transaction"}),"\n",(0,s.jsx)(n.p,{children:"Send a transaction to local Conflux node."}),"\n",(0,s.jsx)(n.h4,{id:"usage-3",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ ./conflux rpc local send --help\nSend a transaction and return its hash\n\nUSAGE:\n    conflux rpc local send [OPTIONS] --from <ADDRESS> --value <HEX>\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n        --data <HEX>           Hash of the method signature and encoded parameters\n        --from <ADDRESS>       Transaction from address\n        --gas <HEX>            Gas provided for transaction execution [default: 0x5208]\n        --gas-price <HEX>      Transaction gas price [default: 0x2540BE400]\n        --nonce <HEX>          Transaction nonce\n        --to <ADDRESS>         Transaction to address (empty to create contract)\n        --url <url>            URL of RPC server [default: http://localhost:12537]\n        --value <HEX>          value sent with this transaction\n"})}),"\n",(0,s.jsx)(n.h4,{id:"\u793a\u4f8b-5",children:"\u793a\u4f8b"}),"\n",(0,s.jsxs)(n.p,{children:["Alice transfer 5 Drip (1 CFX = 10^18 Drip) to Bob. Note, the address of Alice must exist at local machine, otherwise please ",(0,s.jsx)(n.a,{href:"#new",children:"create"})," account for alice at first."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc local send --from <alice_address> --to <bob_address> --value 0x5 --password 123456"})}),"\n",(0,s.jsxs)(n.p,{children:["Alice create a contract with gas 3,000,000. You can use ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"solc"})})," to compile contract to get the bytecodes."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"./conflux rpc local send --from <alice_address> --value 0x0 --gas 0x2DC6C0 --data <HEX_contract_bytecodes> --password 123456"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,n,c)=>{c.d(n,{Z:()=>a,a:()=>l});var s=c(67294);const o={},t=s.createContext(o);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);