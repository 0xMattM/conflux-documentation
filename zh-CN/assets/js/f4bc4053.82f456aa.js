"use strict";(self.webpackChunkconflux_docs=self.webpackChunkconflux_docs||[]).push([[5711],{67709:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(85893),o=n(11151);const r={sidebar_position:4,title:"\u4f7f\u7528 ChainIDE \u5f00\u53d1\u667a\u80fd\u5408\u7ea6",description:"\u4f7f\u7528 ChainIDE \u5728 Core \u7a7a\u95f4\u90e8\u7f72\u667a\u80fd\u5408\u7ea6",displayed_sidebar:"coreSidebar"},c=void 0,s={id:"core/tutorials/chainide",title:"\u4f7f\u7528 ChainIDE \u5f00\u53d1\u667a\u80fd\u5408\u7ea6",description:"\u4f7f\u7528 ChainIDE \u5728 Core \u7a7a\u95f4\u90e8\u7f72\u667a\u80fd\u5408\u7ea6",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/core/tutorials/chainide.md",sourceDirName:"core/tutorials",slug:"/core/tutorials/chainide",permalink:"/zh-CN/docs/core/tutorials/chainide",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/conflux/zh-CN",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"\u4f7f\u7528 ChainIDE \u5f00\u53d1\u667a\u80fd\u5408\u7ea6",description:"\u4f7f\u7528 ChainIDE \u5728 Core \u7a7a\u95f4\u90e8\u7f72\u667a\u80fd\u5408\u7ea6",displayed_sidebar:"coreSidebar"},sidebar:"coreSidebar",previous:{title:"Hardhat Conflux \u63d2\u4ef6",permalink:"/zh-CN/docs/core/tutorials/hardhat-conflux-plugin"},next:{title:"\u5982\u4f55\u8d5e\u52a9\u667a\u80fd\u5408\u7ea6",permalink:"/zh-CN/docs/core/tutorials/how-to-sponsor-contract"}},a={},l=[{value:"Creating a Project",id:"creating-a-project",level:2},{value:"Workspace Overview",id:"workspace-overview",level:2},{value:"Compiling the Contract",id:"compiling-the-contract",level:2},{value:"Connecting Fluent Wallet",id:"connecting-fluent-wallet",level:2},{value:"Deploying the Contract",id:"deploying-the-contract",level:2},{value:"Interacting with the Contract",id:"interacting-with-the-contract",level:2},{value:"Additional Tools",id:"additional-tools",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://chainide.com/",children:"ChainIDE"})," is a web-based IDE tailored for blockchain smart contract development. It offers a comprehensive solution for developing, testing, debugging, and deploying smart contracts. Comparable to Ethereum's Remix, ChainIDE is more versatile, supporting multiple blockchains including Conflux Core Space."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(75742).Z+"",width:"1365",height:"934"})}),"\n",(0,i.jsx)(t.p,{children:"This tutorial will guide you through using ChainIDE to develop and deploy a smart contract on Core Space."}),"\n",(0,i.jsx)(t.h2,{id:"creating-a-project",children:"Creating a Project"}),"\n",(0,i.jsxs)(t.p,{children:["To start, create a project on ChainIDE. Select ",(0,i.jsx)(t.code,{children:"Conflux"})," from the left-hand chain list, then choose a template from the right. For this tutorial, we will use the ",(0,i.jsx)(t.strong,{children:"Storage"})," template."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(67578).Z+"",width:"1263",height:"640"})}),"\n",(0,i.jsx)(t.h2,{id:"workspace-overview",children:"Workspace Overview"}),"\n",(0,i.jsx)(t.p,{children:"Once you create a project, you'll see ChainIDE's workspace, reminiscent of VSCode. It features a file explorer on the left, an editor on the right, and a terminal at the bottom."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(98221).Z+"",width:"1204",height:"934"})}),"\n",(0,i.jsx)(t.p,{children:"The example Solidity code is:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-solidity",children:"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve values in a variable\n */\ncontract Storage {\n\n    uint256 number;\n\n    /**\n     * @dev Store value in variable\n     * @param num value to store\n     */\n    function store(uint256 num) public {\n        number = num;\n    }\n\n    /**\n     * @dev Return value \n     * @return value of 'number'\n     */\n    function retrieve() public view returns (uint256){\n        return number;\n    }\n}\n\n"})}),"\n",(0,i.jsx)(t.h2,{id:"compiling-the-contract",children:"Compiling the Contract"}),"\n",(0,i.jsxs)(t.p,{children:["In the right-side toolbox, the first option is ",(0,i.jsx)(t.strong,{children:"Solidity Compiler"}),". Here, you can select the compiler version and then click the ",(0,i.jsx)(t.strong,{children:"Compile"})," button to compile your contract."]}),"\n",(0,i.jsxs)(t.p,{children:["After compilation, you will get the ",(0,i.jsx)(t.code,{children:"ABI"})," and ",(0,i.jsx)(t.code,{children:"BYTECODE"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(82094).Z+"",width:"326",height:"299"})}),"\n",(0,i.jsx)(t.h2,{id:"connecting-fluent-wallet",children:"Connecting Fluent Wallet"}),"\n",(0,i.jsxs)(t.p,{children:["Before deploying this contract to the Core Space Testnet, connect your Fluent Wallet. Click the ",(0,i.jsx)(t.strong,{children:"Connect Wallet"})," button at the top right of the window."]}),"\n",(0,i.jsxs)(t.p,{children:["Then, in the popup window, select ",(0,i.jsx)(t.strong,{children:"Injected Web3 Provider"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(30533).Z+"",width:"256",height:"177"})}),"\n",(0,i.jsx)(t.p,{children:"Next, choose the Fluent Wallet, as we aim to deploy the contract to Core Space."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(53788).Z+"",width:"263",height:"140"})}),"\n",(0,i.jsxs)(t.p,{children:["Finally, click ",(0,i.jsx)(t.strong,{children:"approve"})," in the wallet popup window. You will then see the wallet connection status (top right) as ",(0,i.jsx)(t.strong,{children:"Connected"}),", along with the connected account address and balance at the bottom right."]}),"\n",(0,i.jsxs)(t.p,{children:["Remember to switch the network to ",(0,i.jsx)(t.strong,{children:"Conflux Testnet"})," in Fluent."]}),"\n",(0,i.jsx)(t.h2,{id:"deploying-the-contract",children:"Deploying the Contract"}),"\n",(0,i.jsxs)(t.p,{children:["Click on ",(0,i.jsx)(t.strong,{children:"Deploy & Interaction"})," in the right toolbox, select a contract, and hit the ",(0,i.jsx)(t.strong,{children:"Deploy"})," button. A deployment confirmation popup will appear; click ",(0,i.jsx)(t.strong,{children:"Confirm"}),". This action sends a transaction to the Core Space Testnet and deploys the contract upon execution."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(63947).Z+"",width:"738",height:"677"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"Output"})," area will display the deployment progress, including the transaction hash."]}),"\n",(0,i.jsxs)(t.p,{children:["Once deployed, a new contract will appear in the ",(0,i.jsx)(t.strong,{children:"Interact"})," area."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(12063).Z+"",width:"338",height:"922"})}),"\n",(0,i.jsx)(t.h2,{id:"interacting-with-the-contract",children:"Interacting with the Contract"}),"\n",(0,i.jsxs)(t.p,{children:["The Interact tool lists all public functions of the contract. For read-only functions, click the ",(0,i.jsx)(t.strong,{children:"Get"})," button. If the function requires parameters, enter them in the input box."]}),"\n",(0,i.jsxs)(t.p,{children:["For state-changing functions, click the ",(0,i.jsx)(t.strong,{children:"Submit"})," button to send a transaction to the Core Space Testnet. The result will appear in the ",(0,i.jsx)(t.strong,{children:"Output"})," area after the transaction executes."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(48989).Z+"",width:"655",height:"667"})}),"\n",(0,i.jsx)(t.h2,{id:"additional-tools",children:"Additional Tools"}),"\n",(0,i.jsx)(t.p,{children:"Other tools in the right toolbox include:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Contract Verifier: Verifies contract source code on ConfluxScan."}),"\n",(0,i.jsx)(t.li,{children:"Address Converter"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(4305).Z+"",width:"331",height:"627"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(88696).Z+"",width:"325",height:"412"})}),"\n",(0,i.jsx)(t.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,i.jsx)(t.p,{children:"ChainIDE is a powerful IDE for smart contract development, offering convenience and suitability for beginners. It is an excellent tool for developing and deploying smart contracts on the Core Space Testnet."})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},75742:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/chainide-2bb04f9388ff7fbddbd4c9e4c0c3a8d4.png"},82094:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/compile-241e6ba8559c545ac7c6efd5c12ac9de.png"},30533:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/connect-wallet-1-f4b9bb2a150a4149414a83c0c0b9be24.png"},53788:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/connect-wallet-2-6d825a567fdb57cda36d2977dcee13b8.png"},63947:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/contract-deploy-3a3320eb5438881b14e9274b0a9c06ed.png"},12063:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/contract-interact-d5c350d76af7db7383bbc6bcd442fb00.jpg"},4305:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/contract-verifier-a73342d2726f17347b8c5323775939dd.jpg"},67578:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/create-project-bc58bb5e6da5fe314fccd5446dd4f222.png"},48989:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/interact-contract-change-state-c3d6ab05fd409874f80da056b48f8e43.png"},98221:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/overview-6c4f49dfcb0ee60643f866ed5d005ff4.jpg"},88696:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/tool-address-converter-1e0e433e97c09020c7a54088f6e96094.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>c});var i=n(67294);const o={},r=i.createContext(o);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);